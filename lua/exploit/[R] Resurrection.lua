-- project resurrection V2
print('Version 2')

--[[
[TO DO]

- all perks
- give gun

--]]

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/Main%20Module.lua', true))()
local _console = main_module['Console']
local esp = main_module['Esp']

-- Variables --
local plr = game.Players.LocalPlayer
local char = plr.Character
local gui = plr.PlayerGui.Gui
local mouse = plr:GetMouse()
local uis = game:GetService('UserInputService')
local cam = game.Workspace.CurrentCamera

local aimbot = false
local aimFor = 'Head'

local map = game.Workspace.Map
local barriers = map.Barriers
local doors = map.Doors
local wallweps = map.WallWeps

local zombies = game.Workspace.NPCs
local powerups = game.Workspace.Powerups

local r = game:GetService('ReplicatedStorage')
local rs = game:GetService('RunService')
local event = r.RemoteEvent
local modules = r.Modules

-- Data Steal --
local data
local call
for i,v in pairs(getgc(true)) do
    if type(v) == 'table' then
        if rawget(v, '__call') and getinfo(v['__call']).source:find('Client') then
            call = v['__call']
        elseif rawget(v, 'changeRound') then
            data = v
        end
    end
end

-- Functions --
function checkTableSplit(v1, v2)
    for i,v in pairs(v1) do
        if tostring(v):find(v2) then
            return v
        end
    end
    return
end

function msg(txt)
    spawn(function()
        setconstant(data.down, 3, txt)
        data.down(plr.Character)
        setconstant(data.down, 3, '%s went down, go revive them!')
    end)
end

function getRound()
    local round_frame = gui.Frame.DisplayRounds
    local round_count = 0

    if round_frame.TenOrHigher.TextTransparency == 0 then
        return tonumber(round_frame.TenOrHigher.Text)
    end
    
    for i,v in pairs(round_frame:GetChildren()) do
        if v:IsA('ImageLabel') and v.ImageTransparency == 0 and v.Name ~= 'TenOrHigher' then
            round_count = round_count + 1
        end
    end
    return round_count
end

function currentGun()
    return char:FindFirstChildWhichIsA('Tool')
end

local current_guns = { }
function getGuns()
    current_guns = { }
    current_guns[currentGun().name] = currentGun
    if #plr.Backpack:GetChildren() > 0 then
        current_guns[plr.Backpack:FindFirstChildWhichIsA('Tool').Name] = plr.Backpack:FindFirstChildWhichIsA('Tool')
    end
    return current_guns
end
getGuns()

function getGunData()
    local v1 = { }
    for i,v in pairs(getgc(true)) do
        if type(v) == 'table' and rawget(v, 'reload') then
            v1[tostring(v['model'])] = v
        end
    end
    return v1
end

function gunMods(v1)
    for i,v in pairs(getGunData()) do
        if v1 == true or v1 == nil then
            v['recoil'] = 0
            v['minspread'] = 0
            v['maxspread'] = 0
            v['automatic'] = true
            v['RPM'] = 2000
            v['bulletpower'] = math.huge
        else
            v['recoil'] = v.info.recoil
            v['minspread'] = 0.01
            v['maxspread'] = 0.1
            v['RPM'] = v.info.RPM
            v['automatic'] = v.info.automatic
            v['bulletpower'] = v.info.bulletpower
        end
    end
end

function getAimPartFromClosestPlayer()
	local closest,curDist = nil, Vector2.new(math.huge, math.huge).magnitude
	for i,v in pairs(zombies:GetChildren()) do
		if v.Name ~= plr.Name and v and v:FindFirstChild('HumanoidRootPart', true) and v:FindFirstChild(aimFor) and v.Humanoid.Health ~= 0 then
			
			local z = game.Workspace.CurrentCamera:WorldToViewportPoint(v.HumanoidRootPart.Position)
			local mouse = uis:GetMouseLocation()
			local dist = Vector2.new((z.X - mouse.X), (z.Y - mouse.Y)).magnitude
			
			if curDist > dist then
				curDist = dist
				closest = v:FindFirstChild(aimFor)
			end
		end
	end
	return closest,curDist
end

function Aim()
	local part,distance = getAimPartFromClosestPlayer()
	local v, isonscreen = game.Workspace.CurrentCamera:WorldToViewportPoint(part.Position)
	local mouse = uis:GetMouseLocation()
	if isonscreen and uis:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and aimbot then
		mousemoverel((v.X/5 - mouse.X/5), (v.Y/5 - mouse.Y/5))
	end
end

rs.RenderStepped:Connect(function()
	pcall(Aim)
end)






local green = Color3.fromRGB(0, 255, 0)
local red = Color3.fromRGB(255, 0, 0)
local blue = Color3.fromRGB(0, 150, 255)
-- Console --
console = _console:Create('[Sinsane]: Project Resurrection', 'Z')

-- [ Kill All Zombies ]
console:AddCommand('kill', function()
    for i,v in pairs(zombies:GetChildren()) do
        for i = 1, getRound() do
            event:FireServer('hitzombie', v, math.huge, 'Torso', 'knife')
        end
    end
    return 'Killed zombies', green
end)

-- [ Loop Kill ]
local loopkill = false
console:AddCommand('loopkill', function()
    loopkill = not loopkill
    if loopkill then
        for i,v in pairs(zombies:GetChildren()) do
            for i = 1, getRound() do
                event:FireServer('hitzombie', v, math.huge, 'Torso', 'knife')
            end
        end
    end
    return 'Loopkill set to '..tostring(loopkill), green
end)

-- [ Repair Barriers ]
console:AddCommand('repair', function()
    for i,v in pairs(barriers:GetChildren()) do
        if v.Broken.Value == true then
            spawn(function()
                repeat wait()
                    event:FireServer('repairBarrier', v)
                until v.Broken.Value == false
            end)
        end 
    end
    return 'Repaired barriers', green
end)

-- [ Loop Repair Barriers ]
local looprepair = false
console:AddCommand('looprepair', function()
    looprepair = not looprepair
    for i,v in pairs(barriers:GetChildren()) do
        if v.Broken.Value == true then
            spawn(function()
                repeat wait()
                    event:FireServer('repairBarrier', v)
                until v.Broken.Value == false
            end)
        end
    end
    return 'Loop repair barriers set to '..tostring(looprepair), green
end)

-- [ To Box ] 
console:AddCommand('box', function()
    char.HumanoidRootPart.CFrame = map.MysteryBox.Box.Lid.PrimaryPart.CFrame + Vector3.new(0, 1, 0)
end)
-- [ To Pap ] 
console:AddCommand('pap', function()
    char.HumanoidRootPart.CFrame = map.PAP.PrimaryPart.CFrame
end)
-- [ To Power ] 
console:AddCommand('power', function()
    if not map.PowerModel.Opened.Value then   

        local v1 = char.HumanoidRootPart.CFrame
        char.HumanoidRootPart.CFrame = map.PowerModel.Switch.PrimaryPart.CFrame
        for i = 1, 5 do
            wait()
        end
        event:FireServer('power')

        char.HumanoidRootPart.CFrame = v1
        return 'Power turned on', green
    end
    return 'Power already on', red
end)

-- [ Max Ammo ]
console:AddCommand('maxammo', function()
    data:maxammo()
    return 'Ammo refilled', green
end)

-- [ Inf Ammo ]
local inf_ammo
console:AddCommand('infammo', function()
    inf_ammo = not inf_ammo
    
    for i,v in pairs(getGunData()) do
        if inf_ammo then
            v['ammo'] = math.huge
            v['ammoleft'] = math.huge
            v.info['maxammo'] = math.huge
        else
            v['ammo'] = v.info.ammo
            v['ammoleft'] = v.info.spareammo
            v.info['maxammo'] = v['maxammo']
        end
    end
    data:maxammo()
    return 'Inf ammo set to '..tostring(inf_ammo), green
end)

-- [ Inf Dmg ]
local inf_dmg
console:AddCommand('infdmg', function()
    inf_dmg = not inf_dmg
    return 'Inf dmg set to '..tostring(inf_dmg), green
end)

-- [ Respawn ]
console:AddCommand('respawn', function()
    data:respawned()
    return 'Respawned', green
end)

-- [ Revive ]
console:AddCommand('revive', function(v1)
    if v1 == '' or  v1 == 'all' then
        for i,v in pairs(game.Players:GetChildren()) do
            event:FireServer('revive', v)
        end
        return 'Revived players'
    else
        if checkTableSplit(game.Players:GetChildren(), v1) ~= nil then
            event:FireServer('revive', checkTableSplit(game.Players:GetChildren(), v1))
            return 'Revived '..tostring(checkTableSplit(game.Players:GetChildren(), v1)), green
        end
    end
    return 'Could not find player', red
end)

-- [ esp ]
local esp_table = { }
local __esp = false
console:AddCommand('esp', function()
    if not __esp then
        for i,v in pairs(zombies:GetChildren()) do
            local _esp = esp.new(v, red, true)
            esp_table[v] = _esp
        end
    else
        for i,v in pairs(plr.PlayerGui:GetChildren()) do
            if v.Name == 'ESP' then
                v:ClearAllChildren()
            end
        end
        esp_table = { }
    end
    __esp = not __esp
    return 'Esp set to '..tostring(__esp), green
end)

-- [ gun mods ]
local gun_mods
console:AddCommand('gunmods', function()
    gun_mods = not gun_mods
    gunMods(gun_mods)
    return 'Gun mods set to '..tostring(gun_mods), green
end)

-- [ aimbot ]
console:AddCommand('aimbot', function()
    aimbot = not aimbot
    return 'Aimbot set to '..tostring(aimbot), green
end)

-- [ bariers ]
local door_folder = Instance.new('Folder', game.CoreGui['Main_Module'])
local remove_doors
console:AddCommand('doors', function()
    remove_doors = not remove_doors
    if remove_doors then
        for i,v in pairs(doors:GetChildren()) do
            v.Parent = door_folder
        end
        return 'Doors disabled', green
    end
    for i,v in pairs(door_folder:GetChildren()) do
        v.Parent = doors
    end
    return 'Doors enabled', green
end)

-- [ Camo ]
local gun_camo
console:AddCommand('camo', function()
    gun_camo = not gun_camo
    if gun_camo then
        for i,v in pairs(cam:FindFirstChildWhichIsA('Model'):GetChildren()) do
            if v.ClassName == 'MeshPart' and not v.Name:find('Glove') and not v.Name:find('Shirt') then
                Rainbowify(v, 'Color')
            end
        end
        return 'Camo enabled', 'rainbow'
    end
    for i,v in pairs(cam:GetChildren()[1]:GetChildren()) do
        for i,v in pairs(rainbow_table) do
            if i.ClassName == 'MeshPart' then
                DeRainbowify(i)
            end
        end
        return 'Camo disabled', green
    end
end)

-- [ Speed ]
local speed = 1
console:AddCommand('speed', function(v1)
    speed = tonumber(v1) or 1
    for i,v in pairs(getGunData()) do
        v.info.weight = speed
    end
    return 'Set speed multiplier to '..tostring(speed), green
end)

-- [ Zombie Speed ]
local zombiespeed = 7
console:AddCommand('zombiespeed', function(v1)
    zombiespeed = tonumber(v1) or 7
    for i,v in pairs(zombies:GetChildren()) do
        v.Humanoid.WalkSpeed = zombiespeed
    end
    return 'Zombies speed set to '..tostring(zombiespeed)
end)

-- [ Cmds ]
console:AddCommand('cmds', function()
    console:Commands()
end)

-- [ Clear ]
console:AddCommand('clr', function()
    console:Clear()
end)

-- [ Perks ]
console:AddCommand('perks', function()
    local perk_number = 0
    for i,v in pairs(plr.stats:GetChildren()) do
        if v.ClassName == 'BoolValue' and not v.Value then
            perk_number = perk_number + 1
            v.Value = true
        end
    end
    if perk_number == 0 then
        return 'Perks already activated', red
    end
    return 'Perks activated', green
end)

-- [ Credits ]
console:AddCommand('credits', function()
    return 'Credits to Sinsane [jaames#9911] and veryunhappydoge [doge#9999]', blue
end)

--[[

-- [  ]
console:AddCommand('', function()

end)

--]]

console:Commands()

event_hook = hookfunc(game.ReplicatedStorage.RemoteEvent.FireServer, function(self, ...)
    local args = {...}
    
    if args[1] == 'hitzombie' and inf_dmg then
        inf_dmg = false
        for i = 1, getRound() do
            game.ReplicatedStorage.RemoteEvent:FireServer('hitzombie', args[2], math.huge, 'Head', 'knife')
        end
        inf_dmg = true
    end
    return event_hook(self, ...)
end)

-- Metatables --
m = getrawmetatable(game)
oldIndex = m.__index
oldNewIndex = m.__newindex
oldNamecall = m.__namecall

setreadonly(m, false)

m.__index = function(t,  k)
    if k == 'Value' then
        local name = tostring(t)
        if name == 'Player' then
            return plr
        end
    end

    return oldIndex(t, k)
end

m.__namecall = function(self, ...)
    local args = {...}
    local method = getnamecallmethod()

    if method == 'Kick' then
        print('Kick attempt: "', ..., '"')
        return
    end
    return oldNamecall(self, ...)
end

powerups.ChildAdded:connect(function(child)
    wait()
    child.PrimaryPart.CFrame = char.PrimaryPart.CFrame
end)

char.ChildAdded:connect(function(child)
    repeat wait() until getGunData()[child.Name] ~= nil
    if child.ClassName == 'Tool' and not current_guns[child.Name] then
        getGuns()

        if inf_ammo then
            for i,v in pairs(getGunData()) do
                v['ammo'] = math.huge
                v['ammoleft'] = math.huge
            end
        end
        if gun_mods then
            gunMods(true)
        end
        for i,v in pairs(getGunData()) do
            v.info['weight'] = speed
        end


    end
end)

zombies.ChildAdded:connect(function(child)
    wait()
    if __esp then
        local _esp = esp.new(child, red, true)
        esp_table[child] = _esp
    end
    if loopkill then
        for i = 1, getRound() do
            event:FireServer('hitzombie', child, math.huge, 'Head', 'knife')
        end
    end
    if zombiespeed ~= 7 then
        child.Humanoid.WalkSpeed = zombiespeed
    end
end)
zombies.ChildRemoved:connect(function(child)
    wait()
    if __esp then
        for i,v in pairs(getgenv().esp.gui:Descendants()) do
            for i2,v2 in pairs(v:GetChildren()) do
                if v2.Adornee == nil or v2.Adornee.Parent == nil or v2.Adornee.Parent.Parent == nil or v2.Adornee.Parent.Parent == game.Workspace.Ignore then
                    v:Destroy()
                end
            end
        end
    end
end)

cam.ChildAdded:connect(function(child)
    wait()
    if child.ClassName == 'Model' then
        if gun_camo then
            for i,v in pairs(child:GetChildren()) do
                if not rainbow_table[v] and v.ClassName == 'MeshPart' and not v.Name:find('Glove') and not v.Name:find('Shirt') then
                    Rainbowify(v, 'Color')
                end
            end
        end
    end
end)
for i,v in pairs(barriers:GetChildren()) do
    v.Broken.Changed:connect(function(v1)
        if v1 and looprepair then
            spawn(function()
                repeat wait()
                    event:FireServer('repairBarrier', v)
                until v.Broken.Value == false
            end)
        end
    end)
end

-- Key Binds --
local delete_folder = Instance.new('Folder', game.CoreGui['Main_Module'])
local delete_table = { }
uis.InputBegan:connect(function(key)
    if not console:IsFocused() then
        -- [ Delete ]
        if key.KeyCode == Enum.KeyCode.X then
            if not plr:GetMouse().Target:IsDescendantOf(cam) then
                local part_data = { }
                part_data[1] = plr:GetMouse().Target
                part_data[2] =  plr:GetMouse().Target.Parent

                table.insert(delete_table, #delete_table+1, part_data)

                plr:GetMouse().Target.Parent = delete_folder
            else
                console:Output('Attempt to delete gun part', red)
            end
        -- [ Return ]
        elseif key.KeyCode == Enum.KeyCode.V then
            local num_parts = #delete_table
            for i,v in pairs(delete_table) do
                v[1].Parent = v[2]
            end
            delete_table = { }
            console:Output(tostring(num_parts)..' Parts returned', green)
        -- [ Toggle ]
        elseif key.KeyCode == Enum.KeyCode.L then
            console:Toggle()
        end
    end
end)
console:Output('Credits to Sinsane [jaames#9911] and veryunhappydoge [doge#9999]', blue)
-- Extras --
char.Humanoid.JumpPower = 50

if map.Misc:FindFirstChild('ParticleEffects') then
    map.Misc:FindFirstChild('ParticleEffects'):Destroy()
end

spawn(function()
    msg('GUI LOADED')
end)

wait()

spawn(function()
    data:papanim()
end)