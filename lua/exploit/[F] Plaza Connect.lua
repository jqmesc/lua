-- game https://www.roblox.com/games/5118029260/Plaza-Connect

--[[

  mmmm   mmmmm   mm   m   mmmm     mm    mm   m  mmmmmm
 #"   "    #     #"m  #  #"   "    ##    #"m  #  #     
 "#mmm     #     # #m #  "#mmm    #  #   # #m #  #mmmmm
     "#    #     #  # #      "#   #mm#   #  # #  #     
 "mmm#"  mm#mm   #   ##  "mmm#"  #    #  #   ##  #mmmmm

--]]

-- Auto rep begger? lol

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local Keybind = main_module['Keybind']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer;

getgenv()._client = { };

getgenv()._shared = {
    AimFolder = { };
    EspFolder = { };
};

getgenv()._assets = {
    Belt = game.Workspace.Belt;
    Booths = game.Workspace.Booths;
}

local _settings = { 
    Game = {
        Belt = 1;
    };
    Player = {
        Beg = false;
        Watch = false;
        Inverse = false;
        Watching = nil;
        Offset = 5;
    };
};

-- // Functions // --
local _createNotif
function _client:Notification(...)
    if not _createNotif then
        for i,v in next,getgc() do
            if getinfo(v).name == 'createNotif' then
                _createNotif = v
                break
            end
        end
    end
    _createNotif(...)
end

function _client:AntiSit(_char)
    local _hum = _char:WaitForChild('Humanoid')
    _hum.Changed:connect(function(_prop)
        if _prop == 'Sit' and _hum.Sit and _settings.Player['Watch'] then
            repeat game:GetService('RunService').RenderStepped:wait()
                _hum.Jump = true
            until not _hum.Sit
        end
    end)
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Env Hax'})

Frame1:AddBox('Gravity',function(v1)
    game.Workspace.Gravity = tonumber(v1) or 196.2
end)

local _beltParts = { }
Frame1:AddBox('Belt Speed Mult',function(v1)
    _settings.Game['Belt'] = tonumber(v1) or 1
    for _,_part in next,_assets.Belt:GetChildren() do
        if not _beltParts[_part] then
            _beltParts[_part] = _part.Velocity
        end
        _part.Velocity = _beltParts[_part]*_settings.Game['Belt']
    end
end)
Frame1:Add('Teleports')

local teleports = {
    Staff = CFrame.new(-162, 16.5, 123, 0, 0, 1, 0, 1, 0, -1, 0, 0);
    Auditorium = CFrame.new(96, 16.8, 375.4, -1, 0, 0, 0, 1, 0, 0, 0, -1);
    Obby = CFrame.new(519, 23.2, -85.5, 0.8, 0, -0.5, 0, 1, 0, 0.5, 0, 0.8);
    Outside = CFrame.new(316, 16.8, 123.2, 0, 0, -1, 0, 1, 0, 1, 0, 0);
}

for _name,_cframe in next,teleports do
    Frame1:AddButton(_name,function()
        _plr.Character.HumanoidRootPart.CFrame = _cframe
    end)
end

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})
local _fly = Frame2:AddToggle('Fly', function(v1) -- Fly
    _settings.Player.Fly = v1
    if v1 then
        local _bodyVelocity
		repeat game:GetService('RunService').RenderStepped:wait()

            _bodyVelocity = _plr.Character:WaitForChild('HumanoidRootPart'):FindFirstChild('BodyVelocity') or Instance.new('BodyVelocity',_plr.Character.HumanoidRootPart);   
		    _bodyVelocity.MaxForce = Vector3.new(4000,4000,4000);

            local cam = game.Workspace.CurrentCamera.CFrame
			
			local v1 = Vector3.new()
			
			if uis:IsKeyDown(Enum.KeyCode.W) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.S) then
				v1 = v1 - Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.D) then
				v1 = v1 + Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.A) then
				v1 = v1 - Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.Space) then
				v1 = v1 + Vector3.new(0, 1, 0)
			end
			if uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
				v1 = v1 - Vector3.new(0, .5, 0)
			end
            if uis:IsKeyDown(Enum.KeyCode.LeftShift) then
				v1 = Vector3.new(v1.X, 0, v1.Z)*10
			end

			_bodyVelocity.Velocity = v1 * 100
			
		until not _settings.Player.Fly
		_bodyVelocity.MaxForce = Vector3.new();
    end
end)
local _recent = { }
local _noclip = Frame2:AddToggle('Noclip', function(v1) -- Noclip
    local _config = {
        debounce = .1;
        size = Vector3.new(5,5,5);
        offset = Vector3.new(0,1.6,0);
        transparency = 1;
    };
    if v1 then
        local _char = _plr.Character
        local _hrp = _char:WaitForChild('HumanoidRootPart')
        local _part = Instance.new('Part', _char)
        _part.Anchored = true
        _part.CanCollide = false
        _part.Size = _config.size
        _part.Transparency = _config.transparency
        _part.CFrame = _hrp.CFrame
        
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('On', Enum.RenderPriority.Camera.Value, function()
                _part.CFrame = _hrp.CFrame + _config.offset
                local _parts = game.Workspace:GetPartsInPart(_part)
    
                for i,v in pairs(_parts) do
                    if _recent[v] or (not v:IsDescendantOf(_char) and v.CanCollide == true) then
                        _recent[v] = tick()
                        v.CanCollide = false
                    end
                end
            end)
        end)
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('Off', Enum.RenderPriority.Camera.Value, function()
                for i,v in pairs(_recent) do
                    if tick() - v >= _config.debounce then
                        i.CanCollide = true
                    end
                end
            end)
        end)
    else
        game:GetService('RunService'):UnbindFromRenderStep('On');
        game:GetService('RunService'):UnbindFromRenderStep('Off');
        for i,v in pairs(_recent) do
            i.CanCollide = true
        end
    end
end)

Frame2:AddToggle('Anti AFK',function(v1)
    _settings.Player['AFK'] = v1
end)

local _connections = {}
Frame2:AddToggle('Anti Blacklist',function(v1)
    _settings.Player['Blacklist'] = v1
    if v1 then
        local _blacklists = cls:GetTagged('Blacklist['.._plr.Name..']')
        -- check current blacklists
        local _hooked = {}
        for _,_collision in next,_blacklists do
            -- green colors
            local _selection = _collision:FindFirstChild('SelectionBox')
            if _selection then
                _selection.Color3 = Color3.fromRGB(0,255,0)
                _selection.SurfaceColor3 = Color3.fromRGB(0,255,0)
            end
            _hooked[_collision] = _collision.Parent

            _collision.Parent = game.CoreGui
            --print('current blacklist removed')
        end
        repeat wait(.05)
            local _blacklists = cls:GetTagged('Blacklist['.._plr.Name..']')
            -- check new unblacklists
            for _collision,_booth in next,_hooked do
                if not table.find(_blacklists,_collision) then
                    --print('player removed blacklist')
                    _collision.SelectionBox:Destroy()
                    _collision.Parent = _booth -- return part
                    _hooked[_collision] = nil -- empty table
                end
            end
            -- check new blacklists
            for _,_collision in next,_blacklists do
                if not _hooked[_collision] then
                    print('player added blacklist')
                    local _selection = _collision:WaitForChild('SelectionBox')
                    _selection.Color3 = Color3.fromRGB(0,255,0)
                    _selection.SurfaceColor3 = Color3.fromRGB(0,255,0)

                    _hooked[_collision] = _collision.Parent -- insert table
                    _collision.Parent = game.CoreGui

                    local _testBox = Instance.new('Part',game.Workspace)
                    _testBox.CanCollide = false
                    _testBox.Transparency = 1
                    _testBox.Size = _collision.Size
                    _testBox.Position = _collision.Position

                    local _cframe
                    local _parts = game.Workspace:GetPartsInPart(_testBox)
                    _testBox:Destroy()
                    for i,v in next,_parts do
                        if v:IsDescendantOf(_plr.Character) then
                            print('blacklisted while inside')
                            _cframe = _plr.Character.HumanoidRootPart.CFrame
                            break
                        end
                    end
                    print()
                    wait(.1)
                    _plr.Character.HumanoidRootPart.CFrame = _cframe
                end
            end
        until not _settings.Player['Blacklist']
        -- return current blacklists
        local _blacklists = cls:GetTagged('Blacklist['.._plr.Name..']')
        for _,_collision in next,_blacklists do
            if _hooked[_collision] then
                --print('current blacklist kept')
                -- red colors
                local _selection = _collision:FindFirstChild('SelectionBox')
                if _selection then
                    _selection.Color3 = Color3.fromRGB(255,0,0)
                    _selection.SurfaceColor3 = Color3.fromRGB(255,0,0)
                end
                _collision.Parent = _hooked[_collision] -- return part
                _hooked[_collision] = nil -- empty table
            end
        end
    end
end)

Frame2:Add('Force Speak')
Frame2:AddToggle('Enabled',function(v1) -- ANTI SIT
    _settings.Player['Watch'] = v1
    if v1 then
        game.Players.LocalPlayer.Character.Humanoid.Jump = true
        repeat game:GetService('RunService').RenderStepped:wait()
            local _target = _settings.Player['Watching']
            if _target and _target.Character and _plr.Character then
                local _hum = _plr.Character:WaitForChild('Humanoid')
                local _hrp = _target.Character:WaitForChild('HumanoidRootPart')
                local _look = _hrp.CFrame.LookVector

                local _cframe
                if _settings.Player['Inverse'] then
                    _cframe = _hrp.CFrame + _look*_settings.Player['Offset']
                else
                    _cframe = CFrame.new(_hrp.Position + _look*_settings.Player['Offset'],_hrp.Position)
                end
                
                _plr.Character:WaitForChild('HumanoidRootPart').CFrame = _cframe
            end
        until not _settings.Player['Watch']
    end
end)
Frame2:AddToggle('Inverse',function(v1)
    _settings.Player['Inverse'] = v1
end)

local _message = 'Give me rep'
local _debounce
Frame2:AddToggle('Auto Rep Beg', function(v1)
    _settings.Player['Beg'] = v1
    if v1 and not _debounce then
        _debounce = true
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(_message,'All')
        repeat wait(5)
            game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(_message,'All')
        until not _settings.Player['Beg']
    end
    _debounce = false
end)

Frame2:AddBox('Player',function(v1)
    for i,v in next,game.Players:GetChildren() do
        if v.Name:lower():find(v1:lower()) then
            _settings.Player['Watching'] = v;
            break
        end
    end
end)
Frame2:AddBox('Offset',function(v1)
    _settings.Player['Offset'] = tonumber(v1) or 5
end)

-- // Keybinds // --
Keybind:NewBind(Enum.KeyCode.RightShift, function() -- Library Keybind
    library:Toggle();
end)
Keybind:NewBind(Enum.KeyCode.F, function() -- Fly Keybind
    _fly:Toggle()
end)
Keybind:NewBind(Enum.KeyCode.N, function() -- Noclip Keybind
    _noclip:Toggle()
end)

-- // Metatables // --
m = getrawmetatable(game)
old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

setreadonly(m, false)

local plr = game.Players.LocalPlayer

m.__namecall = function(self, ...)
    local args = {...}
    if getnamecallmethod() == 'FireServer' and tostring(self) == 'GoAFK' and _settings.Player['AFK'] then
        return
    end
    
    return oldnc(self, unpack(args))
end

-- // Spy // --
_plr.CharacterAdded:connect(function(...)
    _client:AntiSit(...)
end)

-- // Extra // --
_client:AntiSit(game.Players.LocalPlayer.Character)
_client:Notification('[Script]: Executed',10)
_client:Notification('Credits to Sinsane',10)