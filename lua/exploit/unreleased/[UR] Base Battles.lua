-- game https://www.roblox.com/games/5326405001/NEW-Base-Battles

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer
local _libraries = game.ReplicatedStorage.Libraries

local _client = { 
    framework = getsenv(_plr.PlayerScripts:WaitForChild('Framework'));
}
local _shared = { 
    espfolder = { };
    aimfolder = { };
    weaponinfo = { };
}
local _settings = { 
    thermalvision = false;
    gunmods = {
        norecoil = false;
        nodelay = false;
    }
}

-- require(game.ReplicatedStorage.Libraries.Global):Deploy(Enum.UserInputState.End,  {}, req.AutoRespawnActive == "DeployWithMap") <--- Deploy

-- // Steal Data // --
for i,v in pairs(game.ReplicatedStorage.Weapons.Guns:GetChildren()) do
    for i2,v2 in pairs(v:GetChildren()) do
        local _settings = { }
        for i3,v3 in pairs(require(v2.Configuration)) do
            _settings[i3]=v3
        end
        _shared.weaponinfo[v2.Name] = _settings
    end
end
warn('weapon info stored')
-- // Functions // --
function _shared:SameTeam(v1, v2)
    return v1:GetAttribute('Team') == v2:GetAttribute('Team')
end
function _shared:GetWeaponConfig(v1)
    for i,v in pairs(game.ReplicatedStorage.Weapons.Guns:GetDescendants()) do
        if v.Name == tostring(v1) then
            return require(v.Configuration)
        end
    end
end
function _shared:HookPlayer(v1)
    print('player hooked', v1)
    v1.CharacterAdded:connect(function(char)
        --print('player alive', char)

        charSpawn(v1)
        char:WaitForChild('Humanoid').Died:connect(function()
            --print('player died', char)

            charRemoved(v1)
        end)
    end)
end
function _client:GetEnemyTeam()
    local _enemies = { }
    for i,v in pairs(game.Players:GetChildren()) do
        if not _shared:SameTeam(v, _plr) then
            table.insert(_enemies, v)
        end
    end
    return _enemies
end
function _client:GetEquippedWeapon()
    return require(_libraries.Weapon).GetEquippedWeapon(_plr)
end
function _client:EditCurrentWeapon(v1, v2) -- edit weapon.config too
    if tostring(v2):lower() == 'default' then
        --print('restored defaults')
        if rawget(_client:GetEquippedWeapon(), v1) ~= nil then
            if v1 == 'ammo' then
                _client:GetEquippedWeapon()[v1] = _shared.weaponinfo[tostring(_client:GetEquippedWeapon())]['maxAmmo']
            end
        elseif rawget(_client:GetEquippedWeapon().config, v1) ~= nil then
            _client:GetEquippedWeapon().config[v1] = _shared.weaponinfo[tostring(_client:GetEquippedWeapon())][v1]
        end
        return
    end
    if rawget(_client:GetEquippedWeapon(), v1) ~= nil then
        --print('weapon stat')
        _client:GetEquippedWeapon()[v1] = v2
    elseif rawget(_client:GetEquippedWeapon().config, v1) ~= nil then
        --print('config stat')
        _client:GetEquippedWeapon().config[v1] = v2
    end
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Weapon Modifications'})

Frame1:AddToggle('Inf Ammo', function(v1)
    _client:EditCurrentWeapon('ammo', v1 and 9e9 or 'default')
end)

Frame1:AddToggle('Disable Fire Delay', function(v1)
    _client:EditCurrentWeapon('firerate', v1 and 100 or 'default')
end)

Frame1:AddToggle('Disable Recoil', function(v1)
    _client:EditCurrentWeapon('bloomFactor', v1 and 0 or 'default')
    _client:EditCurrentWeapon('bloom', v1 and {hipfire=0,ads=0,base=0} or 'default')
    require(_libraries.Global).AimChanged()
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Player Modifications'})

local _esp
Frame2:AddToggle('ESP', function(v1)
    print(#_shared.espfolder)
    if v1 then 
        _esp = esp.new({folder=_shared.espfolder})
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then 
        _aimbot = aimbot.new({folder=_shared.aimfolder})
    else
        _aimbot:Remove()
    end
end)

Frame2:AddToggle('Thermal Vision', function(v1)
    _settings.thermalvision = v1
    if v1 then 
        repeat wait()
            require(_libraries.HUD.ThermalVision):EnableThermal()
        until not _settings.thermalvision
        require(_libraries.HUD.ThermalVision):DisableThermal()
    end
end)

-- // Update Client // --
function charSpawn(v1)
    if not _shared:SameTeam(v1,_plr) then
        warn('player is enemy')
        _shared.espfolder[v1.Character] = v1.Character
        table.insert(_shared.aimfolder, v1.Character)
        warn('player inserted in folder', #_shared.espfolder, #_shared.aimfolder)
    end
end
function charRemoved(v1)
    if not _shared:SameTeam(v1,_plr) then
        if _shared.espfolder[v1.Character] then
            _shared.espfolder[v1.Character] = nil
        end
        if table.find(_shared.aimfolder, v1.Character) then
            table.remove(_shared.aimfolder, table.find(_shared.aimfolder, v1.Character))
        end
        warn('enemy player removed')
    end
end

game.Players.PlayerAdded:connect(function(_player)
    print('new player added', _player, _player:GetAttribute('Team'))
    _shared:HookPlayer(_player)
end)
game.Players.PlayerRemoving:connect(function(_player)
    local _char = _player.Character
    if table.find(_shared.aimfolder, _char) then
        table.remove(_shared.aimfolder, table.find(_shared.aimfolder, _char))
    end
    print('player removed', _player)
end)
for i,v in pairs(game.Players:GetChildren()) do
    _shared:HookPlayer(v)
    if v.Character then
        charSpawn(v)
    end
end