-- game https://www.roblox.com/games/914010731/Ro-Ghoul-ALPHA

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local Keybind = main_module['Keybind']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer;

-- // GETGC // --
local OperateCD

for _,v in next,getgc(true) do
    if type(v)=='table' then
        --
    elseif type(v)=='function' and islclosure(v) and not issynapsefunction(v) then
        if getinfo(v).name=='OperateCD' then
            OperateCD = v
        end
    end
end



getgenv()._client = {
    PlayerFolder = _plr:WaitForChild('PlayerFolder');
    Remotes = _plr.Character:WaitForChild('Remotes');
};

getgenv()._shared = { 
    AimFolder = { };
    EspFolder = { };
};

local _settings = { 
    Player = {
        Fly = false;
        Noclip = false;
    };
};

-- // Functions // --
function _client:onSpawn()

end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Plr Hax'})

local _fly = Frame1:AddToggle('Fly', function(v1) -- Fly
    _settings.Player.Fly = v1
    if v1 then
        local _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
		repeat game:GetService('RunService').RenderStepped:wait()

            if _plr.Character:FindFirstChild('HumanoidRootPart') and not _plr.Character.HumanoidRootPart:FindFirstChild('BodyVelocity') then
                _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
                --print('replaced body velocity')
            end
            
            local cam = game.Workspace.CurrentCamera.CFrame
			
			local v1 = Vector3.new()
			
			if uis:IsKeyDown(Enum.KeyCode.W) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.S) then
				v1 = v1 - Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.D) then
				v1 = v1 + Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.A) then
				v1 = v1 - Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.Space) then
				v1 = v1 + Vector3.new(0, 1, 0)
			end
			if uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
				v1 = v1 - Vector3.new(0, .5, 0)
			end
            if uis:IsKeyDown(Enum.KeyCode.LeftShift) then
				v1 = Vector3.new(v1.X, 0, v1.Z)*10
			end

			_bodyVelocity.Velocity = v1 * 100
			
		until not _settings.Player.Fly
		_bodyVelocity:Destroy()
    end
end)
local _recent = { }
local _noclip = Frame1:AddToggle('Noclip', function(v1) -- Noclip
    local _config = {
        debounce = .1;
        size = Vector3.new(5,5,5);
        offset = Vector3.new(0,1.6,0);
        transparency = 1;
    };
    if v1 then
        local _char = _plr.Character
        local _hrp = _char:WaitForChild('HumanoidRootPart')
        local _part = Instance.new('Part', _char)
        _part.Anchored = true
        _part.CanCollide = false
        _part.Size = _config.size
        _part.Transparency = _config.transparency
        _part.CFrame = _hrp.CFrame
        
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('On', Enum.RenderPriority.Camera.Value, function()
                _part.CFrame = _hrp.CFrame + _config.offset
                local _parts = game.Workspace:GetPartsInPart(_part)
    
                for i,v in pairs(_parts) do
                    if _recent[v] or (not v:IsDescendantOf(_char) and v.CanCollide == true) then
                        _recent[v] = tick()
                        v.CanCollide = false
                    end
                end
            end)
        end)
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('Off', Enum.RenderPriority.Camera.Value, function()
                for i,v in pairs(_recent) do
                    if tick() - v >= _config.debounce then
                        i.CanCollide = true
                    end
                end
            end)
        end)
    else
        game:GetService('RunService'):UnbindFromRenderStep('On');
        game:GetService('RunService'):UnbindFromRenderStep('Off');
        for i,v in pairs(_recent) do
            i.CanCollide = true
        end
    end
end)
Frame1:AddBox('Walk Speed', function(v1)
    _plr.Character.Humanoid.WalkSpeed = tonumber(v1) or 20;
end)
Frame1:AddBox('Jump Power', function(v1)
    _plr.Character.Humanoid.JumpPower = tonumber(v1) or 55;
end)

-- // Keybinds // --
Keybind:NewBind(Enum.KeyCode.RightShift, function() -- Library Keybind
    library:Toggle();
end)
Keybind:NewBind(Enum.KeyCode.LeftAlt, function() -- Fly Keybind
    _fly:Toggle()
end)
Keybind:NewBind(Enum.KeyCode.N, function() -- Noclip Keybind
    _noclip:Toggle()
end)

-- // Hooks // --
local oldOperateCD
oldOperateCD = hookfunction(OperateCD,function(...)
    local args={...}
    if args[3] and type(args[3])=='number' then
        args[3]=0
    end
    return oldOperateCD(unpack(args))
end)

-- // Metatables // --
local m = getrawmetatable(game)
local old_Index = m.__index
local oldnc = m.__namecall
local oldnw = m.__newindex
local oldc = m.__call

setreadonly(m, false)

m.__index = function(t, k)
    if tostring(t) == 'Humanoid' then
        if k == 'WalkSpeed' then -- Walkspeed Spoof
            return 20;
        elseif k == 'JumpPower' then -- Jumppower Spoof
            return 55;
        end
    end
    return old_Index(t, k)
end

