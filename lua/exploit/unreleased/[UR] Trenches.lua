-- game https://www.roblox.com/games/5648523896/NEW-MAP-Trenches-Beta

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer

getgenv()._client = { };
getgenv()._shared = { 
    AimFolder = { };
    EspFolder = { };
    Items = game.ReplicatedStorage.Items;
};

local _settings = { 
    Weapon = {
        Cooldown = false;
        Reload = false;
        Ammo = false;
        Damage = false;
        Recoil = false;
        Spread = false;
        Mode = 'Default';
    }
}

-- // Functions // --
function _client:getWeapons()
    local _weapons = { }
    if _plr.Character then
        local _equipped = _plr.Character:FindFirstChildOfClass('Tool');
        if _equipped then
            _weapons[tostring(_equipped)] = _equipped
        end
        for i,v in pairs(_plr.Backpack:GetChildren()) do
            if v:IsA('Tool') then
                _weapons[tostring(v)] = v
            end
        end
        return _weapons;
    end
end
function _client:editWeapons(v1, v2)
    for i,v in pairs(self:getWeapons()) do
        if v:FindFirstChild('Variables') then
            local _config = v.Variables;
            local _info = _shared.Items:FindFirstChild(v.Name).Variables;

            _config:FindFirstChild(v1).Value = (v2 ~= nil or tostring(v2):lower() ~= 'default') and v2 or _info:FindFirstChild(v1).Value;
        end
    end
end
function _client:onSpawn()
    if _settings.Weapon['Cooldown'] then
        self:editWeapons('FireRate', 0.01);
    end
    if _settings.Weapon['Damage'] then
        self:editWeapons('Damage', math.huge);
    end
    if _settings.Weapon['Reload'] then
        self:editWeapons('ReloadingTime', 0.01);
    end
    if _settings.Weapon['Recoil'] then
        self:editWeapons('CameraShake', 0);
    end
    if _settings.Weapon['Spread'] then
        self:editWeapons('Spread', 0);
    end
    if not _settings.Weapon['Mode']:lower() == 'default' then
        local _mode = _settings.Weapon['Mode']
        self:editWeapons('Automatic', _mode == 'Automatic' and true or false);
    end
end

function _shared:GetEnemyTeam()
    local _enemies = { }
    for i,v in pairs(game.Players:GetChildren()) do
        if v:IsA('Player') and v.TeamColor ~= _plr.TeamColor then
            table.insert(_enemies, v)
        end
    end
    return _enemies
end
function _shared:ClearFolders()
    for i,v in pairs(self.AimFolder) do
        table.remove(self.AimFolder, i)
    end
    for i,v in pairs(self.EspFolder) do
        self.EspFolder[i] = nil
    end
    --print('folders cleared')
end
function _shared:UpdatedFolders()
    _shared:ClearFolders()
    for i,v in pairs(_shared:GetEnemyTeam()) do
        if v.Character then
            _shared.EspFolder[v.Character] = v.Character
            table.insert(_shared.AimFolder, v.Character)
            --print('enemy player ' .. v.Name .. ' inserted')
        end
    end
    --warn('folders updated')
end
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Inf Ammo', function(v1)
    _client:editWeapons('AmmoPerMag', v1 and math.huge)
    _client:editWeapons('CurrentMag', v1 and math.huge)
end)
Frame1:AddToggle('Inf Damage', function(v1)
    _client:editWeapons('Damage', v1 and math.huge)
end)
Frame1:AddToggle('Insta Reload', function(v1)
    _client:editWeapons('ReloadingTime', v1 and 0.01)
end)
Frame1:AddToggle('Disable Cooldown', function(v1)
    _client:editWeapons('FireRate', v1 and 0.01)
end)
Frame1:AddToggle('Disable Recoil', function(v1)
    _client:editWeapons('CameraShake', v1 and 0)
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _client:editWeapons('Spread', v1 and 0)
end)
Frame1:AddSwitch('Fire Mode', {'Default', 'Auto', 'Semi'}, function(v1)
    _client:editWeapons('Automatic', v1 == 'Auto' and true or v1 == 'Semi' and false)
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})

local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdatedFolders()
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder,smoothness=4})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)
Frame2:AddToggle('Fly', function(v1)
    _settings.fly = v1
    if v1 then
        local _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
		repeat wait()

            if _plr.Character:FindFirstChild('HumanoidRootPart') and not _plr.Character.HumanoidRootPart:FindFirstChild('BodyVelocity') then
                _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
                --print('replaced body velocity')
            end
            
            local cam = game.Workspace.CurrentCamera.CFrame
			
			local v1 = Vector3.new()
			
			if uis:IsKeyDown(Enum.KeyCode.W) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.S) then
				v1 = v1 - Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.D) then
				v1 = v1 + Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.A) then
				v1 = v1 - Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.Space) then
				v1 = v1 + Vector3.new(0, 1, 0)
			end
			if uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
				v1 = v1 - Vector3.new(0, .5, 0)
			end

			_bodyVelocity.Velocity = v1 * 100
			
		until not _settings.fly
		_bodyVelocity:Destroy()
    end
end)

game.Workspace.ChildAdded:connect(function(c)
    local _humanoid = c:WaitForChild('Humanoid',1)
    if _humanoid then
        if c == _plr.Character then
            _client:onSpawn();
        end
        _shared:UpdatedFolders();
    end
end)

-- // Metatables // --
m = getrawmetatable(game)
old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

setreadonly(m, false)

m.__namecall = function(self, ...)
    local args = {...}

    if getnamecallmethod() == 'Play' and pcall(function() return self.AnimationId == 'rbxassetid://6582931389' end) and _settings.Weapon.Reload then
        return
    end

    return oldnc(self, unpack(args))
end