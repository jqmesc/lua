-- if u see this then ur ugly

--[[
[TO DO LIST]

(NEW FEATURES)
- get player class
- disable spawn protection
- gadget spoofing
- add health tags to esp
- anti condition/add condition
- inf ultimates
- mess with tags
- inf range
- teleport
- auto collect
- console text

(TWEAKING)
~ fix esp

(FUTURE GOALS)
-- Kill all (fire bullet function?)
-- god mode
-- heal self/instant heal cooldown
-- shop stuff

(THINGS THAT KICK U [dont abuse])
- inf jump
- walkspeed

--]]

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/Main%20Module.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local uis = game:GetService('UserInputService')

local plr = game.Players.LocalPlayer
local mouse = plr:GetMouse()
local char = plr.Character or plr.CharacterAdded:Wait()
local plrID = 'USER-'..tostring(plr.UserId)

local shields = game.Workspace.Shields
local ignore = game.Workspace.Ignore
local modules = game.ReplicatedStorage.Resources.Modules

Frame1 = library:AddFrame({name = 'ESP'})
Frame2 = library:AddFrame({name = 'Aimbot'})
Frame3 = library:AddFrame({name = 'World Cheats'})
Frame4 = library:AddFrame({name = 'Player Cheats'})
Frame5 = library:AddFrame({name = 'Gun Cheats'})

function gunData()
    return require(modules.ToolData)
end

function getGuns()
    local v1 = { }
    for i,v in pairs(getreg()) do
        if type(v) == 'table' and rawget(v, 'PrimaryAttack') then
            table.insert(v1, v)
            wait()
        end
    end
    return v1
end

local current
function getActiveMap()
    for i,v in pairs(game.Workspace:GetChildren()) do
        if v.Name == 'activeMap' and #v:GetChildren() >= 1 then
            return v
        end
    end
end

function getTeam()
    return game.Players.LocalPlayer.Character.Parent
end

function getOppositeTeam()
    local team = game.Players.LocalPlayer.Character.Parent
        
    if team.Name == 'Attack' then
        return game.Workspace.Characters.Defend
    elseif team.Name == 'Defend' then
        return game.Workspace.Characters.Attack
    elseif team.Name == 'TeamA' then
        return game.Workspace.Characters.TeamB
    elseif team.Name == 'TeamB' then
        return game.Workspace.Characters.TeamA
    end
end

function isGameActive()
    return 
end

--[ Weapon Data ]
for i,v in pairs(gunData()) do
    local weapon_data = { }
    for i2,v2 in pairs(v) do
        weapon_data[i2] = v2
    end
    v['SETTINGS'] = weapon_data
    if rawget(v, 'PRIMARY') then   
        local weapon_data = { }
        for i2,v2 in pairs(v['PRIMARY']) do
            weapon_data[i2] = v2
        end
        v['PRIMARY']['SETTINGS'] = weapon_data
    end
    if rawget(v, 'SECONDARY') then
        local weapon_data = { }
        for i2,v2 in pairs(v['SECONDARY']) do
            weapon_data[i2] = v2
        end
        v['SECONDARY']['SETTINGS'] = weapon_data
    end
end
        
-- [ ESP ]
local do_esp = false
local esp_team = false
local esp_tags = false
local esp_transparency = 0.5
Frame1:AddToggle('ESP', function(v1)
    do_esp = v1
    if v1 then
        for i,v in pairs(getOppositeTeam():GetChildren()) do
            if v:FindFirstChild('Humanoid') then
                esp.new(v, Color3.new(255, 0, 0), esp_transparency)
            end
        end
        if esp_team then
            for i,v in pairs(getTeam():GetChildren()) do
                if v ~= plr.Character and v:FindFirstChild('Humanoid') then
                    esp.new(v, Color3.new(0, 0, 255), esp_transparency)
                end
            end
        end
    else
        for i,v in pairs(esp.current) do
            v:Remove()
        end
        esp.current = { }
    end
end)
Frame1:AddToggle('Team', function(v1)
    esp_team = v1
    if do_esp then
        if v1 then
            for i,v in pairs(getTeam():GetChildren()) do
                if v ~= plr.Character and v:FindFirstChild('Humanoid') then
                    esp.new(v, Color3.new(0, 0, 255), esp_transparency)
                end
            end
        else
            for i,v in pairs(getTeam():GetChildren()) do
                if v ~= plr.Character and v:FindFirstChild('Humanoid') then
                    esp.gui:FindFirstChild(v.Name):Destroy()
                end
            end
        end
    end
end)
-- Frame1:AddToggle('Health Tags', function(v1)
--     esp_tags = v1
--     if v1 then

--     end
-- end)

-- Frame1:AddSwitch('Color', {'Red', 'Green', 'Blue', 'Yellow', 'White', 'Black'}, function(v1)
-- 	local color_codes = {
-- 		['Red'] = Color3.new(255, 0, 0),
-- 		['Green'] = Color3.new(0, 255, 0),
-- 		['Blue'] = Color3.new(0, 0, 255),
-- 		['Yellow'] = Color3.new(255, 255, 0),
-- 		['White'] = Color3.new(255, 255, 255),
-- 		['Black'] = Color3.new(0, 0, 0)
-- 	}
-- 	v2 = color_codes[v1]
-- 	for i,v in pairs(esp.current) do
--         v:SetColor(v2)
--     end
-- end)
Frame1:AddBox('Transparency', function(v1)
    local num = tonumber(v1) or 0.5
    esp:SetTransparency(num)
    esp_transparency = num
end)

-- [ Aimbot ]
aim_bot = aimbot.new({
    folder = getOppositeTeam();
    target = 'Head';
    initial = false;
    team = false;
})
Frame2:AddToggle('Aimbot', function(v1)
    aim_bot:Toggle(v1)
end)
Frame2:AddToggle('Visible', function(v1)
    aim_bot:ChangeVisible(v1)
end)
Frame2:AddSwitch('Target', {'Head', 'HumanoidRootPart'}, function(v1)
    aim_bot:ChangeTarget(v1)
end)
Frame2:AddBox('Key', function(v1)
    local ckey = pcall(function()
		if Enum.KeyCode[v1:upper()] then
			return
		end
	end)
    if ckey then
        aim_bot:ChangeKey(v1)
    else
        aim_bot:ChangeKey(nil)
    end
end)

-- [ Wall Hacks (FUCK YOU DUMB GAME XD made this in 2 minutes)]
local wall_hacks = false
Frame3:AddToggle('Wallhacks', function(v1)
    wall_hacks = v1
    if v1 then
        getActiveMap().Parent = ignore
    else
        if ignore:FindFirstChild('activeMap') then
            ignore:FindFirstChild('activeMap').Parent = game.Workspace
        end
    end
end)
-- [ Anti Shield i love sinsane ]
local anti_shield = false
Frame3:AddToggle('Disable Shields', function(v1)
    anti_shield = v1
    if v1 then
        repeat wait()
            if #shields:GetDescendants() > 8 then
                for i,v in pairs(shields:GetDescendants()) do
                    if v.Parent ~= shields then
                        v.Parent = ignore
                    end
                end
            end
        until not anti_shield
    end
end)
-- [ Trigger Breaker ]
local kill_folder = Instance.new('Folder', MainModule.MainFrame)
local kill_regions = false
Frame3:AddToggle('Disable Kill Parts', function(v1)
    kill_regions = v1
    if v1 then
        for i,v in pairs(game.ReplicatedStorage.TagFolder.KillRegions:GetChildren()) do
            v.Parent = kill_folder
        end
    else
        for i,v in pairs(kill_folder:GetChildren()) do
            v.Parent = game.ReplicatedStorage.TagFolder.KillRegions
        end
    end
end)
-- [ Fullbright ]
local full_bright = false
Frame3:AddToggle('Fullbright', function(v1)
    full_bright = v1
    if v1 then
        spawn(function()
            repeat wait()
                game.Lighting.GlobalShadows = false
                game.Lighting.Brightness = 3
            until not full_bright
        end)
    else
        game.Lighting.GlobalShadows = true
        game.Lighting.Brightness = 1
    end
end)
-- [ Gravity ]
Frame3:AddBox('Gravity', function(v1)
    local num = tonumber(v1) or 130
    require(modules.Constants).Gravity = num
    game.Workspace.Gravity = num
end)

-- [ Teamkill ]
local team_kill = false
Frame4:AddToggle('Enable Team Kill', function(v1)
    team_kill = v1
    if v1 then
        for i,v in pairs(getTeam():GetChildren()) do
            if v ~= char and v:FindFirstChild('Humanoid') then
                v.Parent = getOppositeTeam()
                local team_tag = Instance.new('BoolValue', v)
                team_tag.Name = 'IsOnTeam'
                team_tag.Value = true
            end
        end
    else
        for i,v in pairs(getOppositeTeam():GetChildren()) do
            if v:FindFirstChild('IsOnTeam') then
                v.Parent = getTeam()
            end
        end
    end
end)
-- [ Inf Jump ]
local inf_jump = false
Frame4:AddToggle('Inf Jump', function(v1)
    inf_jump = v1
    if v1 then
        repeat wait()
            if plr.Character and plr.Character.Humanoid.Jump and plr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                local hum = plr.Character.HumanoidRootPart
                hum.Velocity = Vector3.new(hum.Velocity.X, plr.Character.Humanoid.JumpPower, hum.Velocity.Z)
            end
        until not inf_jump
    end
end)
-- [ Jummp Power ]
local jump_power
Frame4:AddBox('Jump Power', function(v1)
    jump_power = tonumber(v1) or 26.5
end)
-- [ Walkspeed ]
local walk_speed
Frame4:AddBox('Walk Speed', function(v1)
    walk_speed = tonumber(v1) or 26.5
end)
-- [ Teleport Key ]
-- local teleport_key
-- Frame4:AddBox('Click To TP', function(v1)
--     local ckey = pcall(function()
-- 		if Enum.KeyCode[v1:upper()] then
-- 			return
-- 		end
-- 	end)
--     if ckey then
--         teleport_key = v1
--     else
--         teleport_key = nil
--     end
-- end)

local gun_mods = {
    inf_dmg = false;
    no_recoil = false;
    no_spread = false;
    instant_reload = false;
    cool_down = false;
    inf_ammo = false;
    explosive_ammo = false;
}
-- [ Inf Dmg ]
Frame5:AddToggle('Insta Kill', function(v1)
    gun_mods.inf_dmg = v1
end)
-- [ No Recoil ]
local old_shake = require(modules.CameraShaker).Shake
local old_impulse = require(modules.ImpulseCamera).Impulse
Frame5:AddToggle('No Recoil', function(v1)
    gun_mods.no_recoil = v1
    if v1 then
        require(modules.CameraShaker).Shake = function() return end
        require(modules.ImpulseCamera).Impulse = function() return end
    else
        require(modules.CameraShaker).Shake = old_shake
        require(modules.ImpulseCamera).Impulse = old_impulse
    end
end)
-- [ No Spread ]
Frame5:AddToggle('No Bullet Spread', function(v1)
    gun_mods.no_spread = v1
end)
-- [ Insta Reload ]
Frame5:AddToggle('Instant Reload', function(v1)
    gun_mods.instant_reload = v1
    if v1 then
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') and rawget(v['PRIMARY'], 'RELOAD_TIME') then
                v['PRIMARY']['RELOAD_TIME'] = 0
            end
        end
    else
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') and rawget(v['PRIMARY'], 'RELOAD_TIME') then
                v['PRIMARY']['RELOAD_TIME'] = v['PRIMARY']['SETTINGS']['RELOAD_TIME']
            end
        end
    end
end)
-- [ No Delay ]
local old_ghost = require(modules.Rifle).BeforeReload
local old_reaper = require(modules.SniperRifle).BeforeReload
Frame5:AddToggle('No Cooldown', function(v1)
    gun_mods.cool_down = v1
    if v1 then
        require(modules.Rifle).BeforeReload = function() return end
        require(modules.SniperRifle).BeforeReload = function() return end
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') and rawget(v['PRIMARY'], 'COOL_DOWN') then
                v['PRIMARY']['COOL_DOWN'] = 0
            end
        end
    else
        require(modules.Rifle).BeforeReload = old_ghost
        require(modules.SniperRifle).BeforeReload = old_reaper
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') and rawget(v['PRIMARY'], 'COOL_DOWN') then
                v['PRIMARY']['COOL_DOWN'] = v['PRIMARY']['SETTINGS']['COOL_DOWN']
            end
        end
    end
end)
-- [ Inf Ammo ]
Frame5:AddToggle('Inf Ammo',function(v1)
    gun_mods.inf_ammo = v1
    if v1 then
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') then
                if rawget(v['PRIMARY'], 'AMMO') then
                    v['PRIMARY']['AMMO'] = math.huge
                end
                if rawget(v['PRIMARY'], 'MAX_AMMO') then
                    v['PRIMARY']['AMMO'] = math.huge
                end
            end
        end
    else
        for i,v in pairs(gunData()) do
            if rawget(v, 'PRIMARY') then
                if rawget(v['PRIMARY'], 'AMMO') then
                    v['PRIMARY']['AMMO'] = v['PRIMARY']['SETTINGS']['AMMO']
                end
                if rawget(v['PRIMARY'], 'MAX_AMMO') then
                    v['PRIMARY']['AMMO'] = v['PRIMARY']['SETTINGS']['MAX_AMMO']
                end
            end
        end
    end
end)
-- [ Explosive Ammo ]
Frame5:AddToggle('Explosive Ammo',function(v1)
    gun_mods.explosive_ammo = v1
end)

-- [ Esp Extras ]
for i,v in pairs(game.Workspace.Characters:GetChildren()) do
    v.ChildAdded:connect(function(child)
        wait()
        if child and child ~= plr.Character then
            if do_esp then
                if child.Parent ~= plr.Character.Parent then
                    esp.new(child, Color3.new(255, 0, 0), esp_transparency)
                elseif esp_team then
                    esp.new(child, Color3.new(0, 0, 255), esp_transparency)
                end
            end
            if team_kill then
                if child.Parent == char.Parent then
                    child.Parent = getOppositeTeam()
                    local team_tag = Instance.new('BoolValue', child)
                    team_tag.Name = 'IsOnTeam'
                    team_tag.Value = true
                end
            end
        end
    end)
end

-- [ Player Extras ]
spawn(function()
    while wait() do
        if walk_speed and plr.Character then
            plr.Character.Humanoid.WalkSpeed = walk_speed
        end
        if jump_power and plr.Character then
            plr.Character.Humanoid.JumpPower = jump_power
        end
    end
end)

-- [ Team Change Spy ]
spawn(function()
    local currentTeam = game.Players.LocalPlayer.Character.Parent
    while wait() do
        if game.Players.LocalPlayer.Character.Parent ~= currentTeam and game.Players.LocalPlayer.Character.Parent ~= nil then
            aim_bot:ChangeFolder(getOppositeTeam())
            currentTeam = game.Players.LocalPlayer.Character.Parent
        end
    end
end)

-- [ Extras ]
game.Workspace.ChildAdded:connect(function(child)
    wait()
    if child.Name == 'activeMap' then
        if wall_hacks then
            child.Parent = ignore
        end
        if kill_regions then
            kill_folder:ClearAllChildren()
            for i,v in pairs(game.ReplicatedStorage.TagFolder.KillRegions:GetChildren()) do
                v.Parent = kill_folder
            end
        end
    end
end)

-- [ Hook Stuff ]
spawn(function()
    ammo_hook = hookfunc(require(modules.BaseTool).IfConsumeAmmoThen,function(...)
        local args={...}
        if gun_mods.inf_ammo then
            args[3] = 0 -- (maxammo - currentammo [to get full ammo set])
        end
        return ammo_hook(unpack(args))
    end)
end)
spawn(function()
    spread_hook = hookfunc(require(modules.BaseTool).FireBulletWithError, function(...)
        local args = {...}

        if gun_mods.no_spread then
            args[4] = 0
        end
        if gun_mods.explosive_ammo then
            args[7] = require(modules.ToolRequestCallbacks).SilverBulletDamage
        end

        return spread_hook(unpack(args))
    end)
end)

-- [ Keybinds ]
uis.InputBegan:Connect(function(input, gpi)
    local key = input.KeyCode
    if not gpi then
        if key == Enum.KeyCode.P then
            library:Toggle()
        end
    end
end)

-- [ Metatables ]
local m = getrawmetatable(game)
setreadonly(m, false)

old_Namecall = m.__namecall
m.__namecall = function(self, ...)
    local args = {...}
    if getnamecallmethod() == 'FireServer' then
        if args[2] and type(args[2]) == 'table' and rawget(args[2], 'damageTypeModel') then
            -- SHOT BULLET

            --local dmg = args[2]['damageTypeModel']
            --dmg['headshotMultipler'] = math.huge

            -- if wall_hacks then
            --     table.insert(args[2]['ignoreList'], #args[2]['ignoreList']+1, getActiveMap())
            -- end
            -- local int = 1
            -- for i,v in pairs(game.Players:GetChildren()) do
            --     if v ~= plr and v.Character and v.Character.Parent ~= char.Parent then
            --         table.insert(args[2]['hits'], v.Character.Head)
            --     end
            -- end

        elseif args[2] and type(args[2]) == 'table' and type(args[2][1]) == 'table' and rawget(args[2][1], 'characterModel') then
            -- HIT PLAYER
            local data = args[2][1]

            if gun_mods.inf_dmg then
                data['otherData']['isCritical'] = true
                data['otherData']['headshotMultipler'] = math.huge
            end
        end
    end
    return old_Namecall(self, unpack(args))
end