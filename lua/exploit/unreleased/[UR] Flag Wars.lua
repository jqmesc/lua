-- game https://www.roblox.com/games/3214114884/Flag-Wars-FREE-GUN

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer
local _rs = game.ReplicatedStorage

local _weaponSystem = _rs.WeaponsSystem

_settings = {
    gun_mods = {
        Recoil = false;
        Spread = false;
        Delay = false;
        Walls = false;
        Velocity = false;
        Reload = false;
        Mode = 'Default';
    }
}

local _client = { 
    modules = _plr.PlayerScripts.Client['Client Framework'].Modules;
}
local _shared = { 
    AimFolder = { };
    EspFolder = { };
}

-- // Backdoor // --
function _shared:GetEnemyTeam()
    local _enemies = { }
    for i,v in pairs(game.Players:GetChildren()) do
        if v.TeamColor ~= _plr.TeamColor then
            table.insert(_enemies, v)
        end
    end
    print(#_enemies, #game.Players:GetChildren())
    return _enemies
end
function _client:Kill(v1)
    local _weapon
    for i,v in pairs(_plr.Backpack:GetChildren()) do
        if v:FindFirstChild('WeaponType') and v.WeaponType.Value == 'BulletWeapon' then
            _weapon = v
        end
    end
    if _weapon and v1.Character then
        spawn(function()
            repeat wait()
                _weaponSystem.Network.WeaponHit:FireServer(_weapon, {['part']=v1.Character.Head,['h']=v1.Character.Humanoid,['d']=0,['maxDist']=0})
            until not v1.Character or v1.Character.Humanoid.Health <= 0
        end)
    end
end
function _shared:UpdatedFolders()
    for i,v in pairs(_shared:GetEnemyTeam()) do
        if v.Character then
            _shared.EspFolder[v.Character] = v.Character
            table.insert(_shared.AimFolder, v.Character)
            --print('enemy player ' .. v.Name .. ' inserted')
        end
    end
    warn('folders updated')
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Wallhacks', function(v1)
    _settings.gun_mods.Walls = v1
end)
Frame1:AddToggle('Max Bullet Velocity', function(v1)
    _settings.gun_mods.Velocity = v1
end)
Frame1:AddToggle('Insta Reload', function(v1)
    _settings.gun_mods.Reload = v1
end)
Frame1:AddToggle('Disable Recoil', function(v1)
    _settings.gun_mods.Recoil = v1
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _settings.gun_mods.Spread = v1
end)
Frame1:AddToggle('Disable Fire Delay', function(v1)
    _settings.gun_mods.Delay = v1
end)
Frame1:AddSwitch('Fire Mode', {'Default','Auto','Semi'}, function(v1)
    _settings.gun_mods.Mode = v1
end)
-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Player Hax'})

local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdatedFolders()
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder,smoothness=0.5})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)

Frame2:AddToggle('Inf Stamina', function(v1)
    _settings.inf_stamina = v1
    if v1 then
        repeat wait()
            local sprintFunc = require(_client.modules['2 | Character']).Functions.Sprint
            setupvalue(sprintFunc, 2, 80)
        until not _settings.inf_stamina
    end
end)

-- // GUI Frame 3 // --
local Frame3 = library:AddFrame({name='Environment Hax'})

Frame3:AddButton('Kill Enemies', function()
    for i,v in pairs(_shared:GetEnemyTeam()) do
        _client:Kill(v)
    end
end)

Frame3:AddBox('Gravity Multiplier', function(v1)
    game.Workspace.Gravity = 196.2*tonumber(v1) or 1
end)
-- // Hooks // --
_hooks = { }

_hooks.fire = hookfunc(require(game.ReplicatedStorage.WeaponsSystem.Libraries.BaseWeapon).fire, function(...)
    local args = {...}
    gunData = args[1].configValues

    if _settings.gun_mods['Recoil'] then
        gunData.RecoilMax = 0
        gunData.RecoilMin = 0
    end
    if _settings.gun_mods['Spread'] then
        gunData.MaxSpread = 0
        gunData.MinSpread = 0
    end
    if _settings.gun_mods['Delay'] then
        gunData.ShotCooldown = 0.01
    end
    if _settings.gun_mods['Velocity'] then
        gunData.BulletSpeed = 100000
    end
    if _settings.gun_mods['Mode'] ~= 'Default' then
        gunData.FireMode = _settings.gun_mods['Mode'] == 'Auto' and 'Automatic' or 'Semiautomatic'
    end

    return _hooks.fire(unpack(args))
end)

_hooks.reload = hookfunc(require(game.ReplicatedStorage.WeaponsSystem.Libraries.BaseWeapon).getConfigValue, function(...)
    local args = {...}

    if args[2] == 'ReloadTime' and _settings.gun_mods['Reload'] then
        args[3] = 0
    end
    if args[2] == 'ReloadAnimation' and _settings.gun_mods['Reload'] then
        return nil
    end

    return _hooks.reload(unpack(args))
end)

_hooks.ignore = hookfunc(require(game.ReplicatedStorage.WeaponsSystem.WeaponTypes.BulletWeapon).getIgnoreList, function(...)
    --print('got ignore list')
    
    local args = {...}
 
    if _settings.gun_mods['Walls'] then
        -- table.insert(args[1].ignoreList, game.Workspace.Core.CurrentMap)
        -- table.insert(args[1].ignoreList, game.Workspace.Core.CurrentDirt)
        table.insert(args[1].ignoreList, game.Workspace.Core)
    else
        table.remove(args[1].ignoreList, table.find(args[1].ignoreList, game.Workspace.Core))
    end

    return args[1].ignoreList
end)

_hooks.yieldjump = hookfunc(require(_client.modules['2 | Character']).Functions.YieldJump, function() return end) -- Disable jump blocker

-- // Char spawn // --
game.Workspace.ChildAdded:connect(function(child)
    if child:WaitForChild('Humanoid') then
        _shared:UpdatedFolders()
    end
end)