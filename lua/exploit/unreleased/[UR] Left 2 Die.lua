-- game https://www.roblox.com/games/3234050617/Left-2-Die-NEW-SURVIVAL-MAP

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer

local _client = {
    Event = game.ReplicatedStorage.Remotes:FindFirstChild('Event' .. _plr.UserId); -- breakglass, firegun, muzzleflash, teamkill, equip weapon
    Function = game.ReplicatedStorage.Remotes:FindFirstChild('Function' .. _plr.UserId);
}
local _shared = {
    EspFolder = { };
    AimFolder = { };
    Remotes = game.ReplicatedStorage.Remotes;
    Guns = game.ReplicatedStorage.Guns.Modules;
 }
 local _settings = { 
    gun_mods = { 
        Ammo = false;
        Damage = false;
        Recoil = false;
        Spread = false;
        Delay = false;
        Mode = 'Default';
    };
    fall = true;
    god = false;
    jump = 1;
 }

 -- // Functions // --
 function _shared:GetEnemyTeam()
    local _enemies = { }
    for i,v in pairs(game.Workspace.CommonModels:GetChildren()) do
        -- if not v:FindFirstChild('Humanoid') then
        --     local _hum = Instance.new('Humanoid', v)
        --     _hum.NameDisplayDistance = 0
        -- end
        table.insert(_enemies, v)
    end
    for i,v in pairs(game.Workspace.Commons:GetChildren()) do
        table.insert(_enemies, v)
    end
    for i,v in pairs(game.Workspace.SI:GetChildren()) do
        table.insert(_enemies, v)
    end
    return _enemies
end
function _shared:ClearFolders()
    for i,v in pairs(self.AimFolder) do
        table.remove(self.AimFolder, i)
    end
    -- for i,v in pairs(self.EspFolder) do
    --     self.EspFolder[i] = nil
    -- end
    --print('folders cleared')
end
function _shared:UpdatedFolders()
    _shared:ClearFolders()
    for i,v in pairs(_shared:GetEnemyTeam()) do
        table.insert(_shared.AimFolder, v)
        --_shared.EspFolder[v] = v
        --print('enemy player ' .. v.Name .. ' inserted')
    end
    --warn('folders updated')
end
function _client:EditCurrentWeapon(v1, v2)
    local _gunData = getupvalue(getrenv().shared.getVoffset, 1)

    if not _gunData['info'] then
        local _info = { }
        for i,v in pairs(_gunData) do
            _info[i]=v
        end
        _gunData['info'] = _info
    end
    local _gunInfo = _gunData['info']
    --local _gunInfo = require(_shared.Guns:FindFirstChild(_gunData.gunName)).new()
    if _gunData[v1] == nil then return end
    _gunData[v1] = (v2 ~= nil or tostring(v2):lower() ~= 'default') and v2 or _gunInfo[v1]
end
function _client:Reload()
    local _gunData = getupvalue(getrenv().shared.getVoffset, 1)

    require(game.ReplicatedStorage.Guns.Modules.GunBase).reload(_gunData)
end
function _client:Unequip()
    local _gunData = getupvalue(getrenv().shared.getVoffset, 1)

    require(game.ReplicatedStorage.Guns.Modules.GunBase).unequip(_gunData)
end

 -- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Inf Ammo', function(v1)
    local unequip = require(game.ReplicatedStorage.Guns.Modules.GunBase).unequip
    local _gunData = getupvalue(getrenv().shared.getVoffset, 1)

    _settings.gun_mods.Ammo = v1
    _gunData.ammo.Value = 9e9;
    _client:Unequip()
end)
Frame1:AddToggle('Inf Damage', function(v1)
    _settings.gun_mods.Damage = v1
    _client:EditCurrentWeapon('damage', v1 and math.huge)
end)
Frame1:AddToggle('Disable Recoil', function(v1)
    _settings.gun_mods.Recoil = v1
    _client:EditCurrentWeapon('c_recoil', v1 and 0)
    _client:EditCurrentWeapon('c_recoil_side', v1 and 0)
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _settings.gun_mods.Spread = v1
    _client:EditCurrentWeapon('spread', v1 and 0)

    -- for shotguns
    _client:EditCurrentWeapon('verticalSpread', v1 and 0)
    _client:EditCurrentWeapon('crouchSpreadDivisor', v1 and 0)
end)
Frame1:AddToggle('Disable Cooldown', function(v1)
    _settings.gun_mods.Delay = v1
    _client:EditCurrentWeapon('firerate', v1 and 0.01)
end)
Frame1:AddSwitch('Fire Mode', {'Default', 'Auto', 'Semi'}, function(v1)
    _settings.gun_mods.Mode = v1
    _client:EditCurrentWeapon('mode', v1~='Default' and v1)
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})

local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        --_esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})  
        _esp1 = esp.new({parent=game.Workspace.SI,color=Color3.fromRGB(255,0,0)}) 
        _esp2 = esp.new({parent=game.Workspace.Commons,color=Color3.fromRGB(255,0,0)})
        _esp3 = esp.new({parent=game.Workspace.CommonModels,color=Color3.fromRGB(255,0,0)}) 
        --_shared:UpdatedFolders()
    else
        --_esp:Remove()
        _esp1:Remove()
        _esp2:Remove()
        _esp3:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)

Frame2:AddToggle('God', function(v1)
    _settings.god = v1
    if v1 then
        repeat wait()
            if _plr.Character and _plr.Character:FindFirstChild('Humanoid') then
                local _humanoid = _plr.Character.Humanoid
                local amt = _humanoid.Health - _humanoid.MaxHealth
                
                _client.Event:FireServer('SelfDamage', amt)
            end
        until not _settings.god
    end
end)

Frame2:AddBox('Jump Mult', function(v1)
    _settings.jump = tonumber(v1) or 1
end)

-- // GUI Frame 3 // --
local Frame3 = library:AddFrame({name='Env Hax'})

Frame3:AddButton('Break Glass', function()
    for i,v in pairs(game.Workspace.Map:GetChildren()) do
        if v.Name == 'Glass' then
            _client.Event:FireServer('BreakGlass', v)
        end
    end
end)
Frame3:AddButton('Break Doors', function()
    for i,v in pairs(game.Workspace.Map:GetChildren()) do
        if v.Name == 'Door' then
            repeat wait()
                _client.Event:FireServer('DamageDoor', v.Health)
            until v.Health.Value <= 0
        end
    end
end)

-- // Metatables // --
m = getrawmetatable(game)
old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

setreadonly(m, false)

m.__newindex = function(t, k, v)
    if tostring(t) == 'Humanoid' and k == 'JumpPower' then
        v = 22*_settings.jump
    end
    return oldnw(t, k, v)
end

m.__namecall = function(self, ...)
    local args = {...}

    if getnamecallmethod() == 'GetAttribute' then
        if args[1] == 'FallMidigate' then
            return _settings.fall
        end
    end
    return oldnc(self, unpack(args))
end

-- // Spy // --
game.Workspace.Commons.ChildAdded:connect(function(c)
    _shared:UpdatedFolders()
end)
game.Workspace.SI.ChildAdded:connect(function(c)
    _shared:UpdatedFolders()
end)