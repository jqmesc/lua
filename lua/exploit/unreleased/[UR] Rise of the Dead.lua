-- game https://www.roblox.com/games/141084271/Rise-of-the-Dead

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local Keybind = main_module['Keybind']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer;

getgenv()._client = {
    CharacterProperties = require(_plr.Character:WaitForChild('CharacterModule')).CharacterProperties;
    CurrentWeapon = require(_plr.Character:WaitForChild('CharacterModule')).EquippedToolModule;
 };

getgenv()._shared = {
    Characters = game.Workspace:WaitForChild('Characters');
    Interactables = game.Workspace:WaitForChild('Interactables');
    Environment = game.Workspace:WaitForChild('Environment');
    Entities = game.Workspace:WaitForChild('Entity');
    Remotes = game.ReplicatedStorage:WaitForChild('Remotes');
    AimFolder = { };
    EspFolder = { };
};

local _settings = { 
    Weapon = {
        Walls = false;
        Recoil = false;
        Spread = false;
    };
    Player = {
        Fly = false;
        Noclip = false;
        Movement = {
            Jump = false;
            SprintSpeed = false;
            SlideSpeed = false;
        };
    };
    Game = {
    };
};

-- // Functions // --
function _client:EditWeapon(v1, v2)
    local req = require(game.Players.LocalPlayer.Character.CharacterModule);
    local config = req.EquippedToolModule
    local _stats = getupvalue(config.GetConfigurations, 1);

    if config['info'] then
        local _info = { }
        for i,v in pairs(_stats) do
            _info[i]=v;
        end
        config['info'] = _info;
    end

    config.SetConfigurations(v1, (v2~=nil or tostring(v2):lower()~='default') and v2 or config['info'][v1])
    
end
function _client:EditWeapon2(v1, v2)
    local req = require(game.Players.LocalPlayer.Character.CharacterModule);
    local config = req.EquippedToolModule
    local _stats = getupvalue(config.GetProperties, 1);

    if config['info'] then
        local _info = { }
        for i,v in pairs(_stats) do
            _info[i]=v;
        end
        config['info'] = _info;
    end

    config.SetProperties(v1, (v2~=nil or tostring(v2):lower()~='default') and v2 or config['info'][v1])
    
end
function _client:onSpawn()
    self.CurrentWeapon = require(_plr.Character:WaitForChild('CharacterModule')).EquippedToolModule;
    self.CharacterProperties = require(_plr.Character:WaitForChild('CharacterModule')).CharacterProperties;
    self.CharacterProperties['info'] = functions:CopyTable(self.CharacterProperties);

    -- Apply Movement
    for i,v in pairs(_settings.Player.Movement) do
        if v then
            self.CharacterProperties[i]=v;
        end
    end

    -- Complete
    warn('onSpawn fired')
end

local _espFolder = Instance.new('Model', game.Workspace)
function _shared:UpdateFolders()
    for i,v in pairs(_shared.Entities:GetChildren()) do
        if v:FindFirstChild('Zombie') then
            table.insert(self.AimFolder, v);
            v.Parent = _espFolder;
        end
    end
    self.EspFolder[_espFolder] = _espFolder;
    --warn('folders updated')
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Wallhacks', function(v1)
    _settings.Weapon.Walls = v1;
end)

Frame1:AddToggle('Disable Recoil', function(v1)
    _settings.Weapon.Recoil = v1;
    _client:EditWeapon('XRecoil', 0);
    _client:EditWeapon('YRecoil', 0);
    _client:EditWeapon('RecoilStregth', 0);
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _settings.Weapon.Spread = v1;
    _client:EditWeapon('BaseInaccuracy', 0);
end)
Frame1:AddToggle('Insta Reload', function(v1)
    _settings.Weapon.Reload = v1;
    _client:EditWeapon2('ReloadSpeed', 0.1);
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})
local _fly = Frame2:AddToggle('Fly', function(v1) -- Fly
    _settings.Player.Fly = v1
    if v1 then
        local _bodyVelocity
		repeat game:GetService('RunService').RenderStepped:wait()

            _bodyVelocity = _plr.Character.HumanoidRootPart:WaitForChild('BodyVelocity');   
		    _bodyVelocity.MaxForce = Vector3.new(4000,4000,4000);

            local cam = game.Workspace.CurrentCamera.CFrame
			
			local v1 = Vector3.new()
			
			if uis:IsKeyDown(Enum.KeyCode.W) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.S) then
				v1 = v1 - Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.D) then
				v1 = v1 + Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.A) then
				v1 = v1 - Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.Space) then
				v1 = v1 + Vector3.new(0, 1, 0)
			end
			if uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
				v1 = v1 - Vector3.new(0, .5, 0)
			end
            if uis:IsKeyDown(Enum.KeyCode.LeftShift) then
				v1 = Vector3.new(v1.X, 0, v1.Z)*10
			end

			_bodyVelocity.Velocity = v1 * 100
			
		until not _settings.Player.Fly
		_bodyVelocity.MaxForce = Vector3.new();
    end
end)
local _recent = { }
local _noclip = Frame2:AddToggle('Noclip', function(v1) -- Noclip
    local _config = {
        debounce = .1;
        size = Vector3.new(5,5,5);
        offset = Vector3.new(0,1.6,0);
        transparency = 1;
    };
    if v1 then
        local _char = _plr.Character
        local _hrp = _char:WaitForChild('HumanoidRootPart')
        local _part = Instance.new('Part', _char)
        _part.Anchored = true
        _part.CanCollide = false
        _part.Size = _config.size
        _part.Transparency = _config.transparency
        _part.CFrame = _hrp.CFrame
        
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('On', Enum.RenderPriority.Camera.Value, function()
                _part.CFrame = _hrp.CFrame + _config.offset
                local _parts = game.Workspace:GetPartsInPart(_part)
    
                for i,v in pairs(_parts) do
                    if _recent[v] or (not v:IsDescendantOf(_char) and v.CanCollide == true) then
                        _recent[v] = tick()
                        v.CanCollide = false
                    end
                end
            end)
        end)
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('Off', Enum.RenderPriority.Camera.Value, function()
                for i,v in pairs(_recent) do
                    if tick() - v >= _config.debounce then
                        i.CanCollide = true
                    end
                end
            end)
        end)
    else
        game:GetService('RunService'):UnbindFromRenderStep('On');
        game:GetService('RunService'):UnbindFromRenderStep('Off');
        for i,v in pairs(_recent) do
            i.CanCollide = true
        end
    end
end)

Frame2:AddBox('Jump Power', function(v1)
    _settings.Player.Movement['Jump'] = tonumber(v1) or false;
end)
Frame2:AddBox('Sprint Speed', function(v1)
    local v1 = tonumber(v1) or _client.CharacterProperties.info['SprintSpeed'];
    _settings.Player.Movement['SprintSpeed'] = v1;
    _client.CharacterProperties['SprintSpeed'] = v1;
end)
Frame2:AddBox('Slide Speed', function(v1)
    local v1 = tonumber(v1) or _client.CharacterProperties.info['SlideSpeed'];
    _settings.Player.Movement['SlideSpeed'] = v1;
    _client.CharacterProperties['SlideSpeed'] = v1;
end)

-- // GUI Frame 3 // --
local Frame3 = library:AddFrame({name='Env Hax'})

local _aimbot
Frame3:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder,smoothness=1})
        _shared:UpdateFolders()
    else
        _aimbot:Remove()
    end
end)
local _esp
Frame3:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdateFolders()
    else
        _esp:Remove()
    end
end)

Frame3:AddBox('Gravity', function(v1)
    game.Workspace.Gravity = tonumber(v1) or 196.2;
end)

-- // Keybinds // --
Keybind:NewBind(Enum.KeyCode.RightShift, function() -- Library Keybind
    library:Toggle();
end)
Keybind:NewBind(Enum.KeyCode.F, function() -- Fly Keybind
    _fly:Toggle()
end)
Keybind:NewBind(Enum.KeyCode.N, function() -- Noclip Keybind
    _noclip:Toggle()
end)

-- // Metatables // --
m = getrawmetatable(game)
old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

setreadonly(m, false)

m.__newindex = function(t, k, v) 
    if tostring(t) == 'Humanoid' and k == 'JumpPower' then
        if _settings.Player.Movement['Jump'] then
            v = _settings.Player.Movement['Jump'];
        end
    end
    return oldnw(t, k, v)
end

m.__namecall = function(self, ...)

    local args = {...}

    if getnamecallmethod() == 'GetAttribute' then
        if args[1] == 'IgnoreWeaponRay' and not self.Parent:FindFirstChild('Zombie') and _settings.Weapon.Walls then
            return true;
        end
    end

    return oldnc(self, unpack(args))
end

-- // Spy // --
_plr.CharacterAdded:connect(function(c)
    c:WaitForChild('Humanoid');
    _client:onSpawn();
end)

_shared.Entities.ChildAdded:connect(function(c)
    _shared:UpdateFolders()
end)

-- // EXECUTE
_client:onSpawn();