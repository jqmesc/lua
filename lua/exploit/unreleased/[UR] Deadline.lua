-- game https://www.roblox.com/games/3837841034/0-21-5-Deadline

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer

local _client = { 
    Alive = require(game.ReplicatedStorage.module.is_alive)(_plr);
}
local _shared = {
    EspFolder = { };
    AimFolder = { };
 }

 -- // Functions // --
 function _shared:GetEnemyTeam()
    local _enemies = { }
    for i,v in pairs(getgc(true)) do
        if type(v) == 'table' and rawget(v, 'character') and rawget(v, 'player') then
            if v.player.TeamColor ~= _plr.TeamColor then
                table.insert(_enemies, v.character)
            end
        end
    end
    return _enemies
end
function _shared:ClearFolders()
    for i,v in pairs(self.AimFolder) do
        table.remove(self.AimFolder, i)
    end
    for i,v in pairs(self.EspFolder) do
        self.EspFolder[i] = nil
    end
    --print('folders cleared')
end
function _shared:UpdatedFolders()
    _shared:ClearFolders()
    for i,v in pairs(_shared:GetEnemyTeam()) do
        _shared.EspFolder[v] = v
        table.insert(_shared.AimFolder, v)
        --print('enemy player ' .. v.Name .. ' inserted')
    end
    --warn('folders updated')
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Disable Recoil', function(v1)

end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})

local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdatedFolders()
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder, smoothness=3})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)