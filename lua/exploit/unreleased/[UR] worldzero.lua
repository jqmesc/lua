-- WORLD ZERO

--[[
[TO DO]:

- health stuff
- world tp
- set class
- consistant walkspeed bypass
- good tp (fly?????)
- unlock waystones (game.ReplicatedStorage.Shared.Teleport.WaystoneTeleport:FireServer(1, 0))
- spectate
- create custom chats
- fix admin panel???

--]]

local main_module = loadstring(game:HttpGet('https://ledoge.xyz/scripts/module.txt', true))()
local library = main_module['Library']
local esp = main_module['Esp']

local plr = game.Players.LocalPlayer
local char = plr.Character
local characters = game.Workspace.Characters
local properties = plr.Character.Properties
local cam = game.Workspace.CurrentCamera
local uis = game:GetService('UserInputService')

local rs = game.ReplicatedStorage
local client = rs.Client
local shared = rs.Shared

local profiles = rs.Profiles
local profile = profiles[plr.Name]
local class = profile.Class

local map = game.Workspace.Map
local waystones = game.Workspace.Waystones
if game.Workspace:FindFirstChild('Great Wall of no exploration') then
    local barriers = require(game.ReplicatedStorage.Shared.Missions).barriers and game.Workspace['Great Wall of no exploration']:GetChildren()
end
local coins = game.Workspace.Coins
local mobs_folder = game.Workspace.Mobs
local pets = game.Workspace.Pets

--game.ReplicatedStorage.Shared.BodyTracking.U:Destroy()

-- data stuff
local client_camera
for i,v in pairs(getgc(true)) do
    if type(v) == 'table' then
        if rawget(v, 'UpdateFOVTarget') then
            client_camera = v
        end
    elseif type(v) == 'function' and islclosure(v) and not is_synapse_function(v) then
        if getinfo(v).name == 'MakeServerMob' then
            mob_data = getupvalue(v, 1)
        end
        if getinfo(v).name == 'MakeBossPanel' then
            boss_func = v
        end
    end
end

getgenv().actions = require(client['Actions'])
getgenv().animations = require(client['Animations'])
getgenv().guis = require(client['Gui'])
getgenv().input = require(client['Input'])
--getgenv().client_camera = require(client['Camera'])

getgenv().admin = require(shared['Admin'])
getgenv().skills = require(shared['Skills'])
getgenv().teleports = require(shared['Teleport'])
getgenv().status = require(shared['Status'])
getgenv().effects = require(shared['Effects'])
getgenv().pets = require(shared['Pets'])
getgenv().energy = require(shared['Energy'])
getgenv().classes = require(shared['Classes'])
getgenv().sfx = require(shared['SFX'])
getgenv().mobs = require(shared['Mobs'])
getgenv().combat = require(shared['Combat'])
getgenv().body_tracking = require(shared['BodyTracking'])
getgenv().health = require(shared['Health'])
getgenv().settings = require(shared['Settings'])

wait()

-- [System Message Colorizer]
local sys_color = Color3.fromRGB(0, 255, 0)
spawn(function()
    sys_hook = hookfunc(actions['SystemMessage'], function(...)
        local args = {...}
        
        if args[2]:find('Sinsane') then

            game.Players.LocalPlayer.PlayerGui.MainGui.SystemMessage.Background.ImageColor3 = sys_color

            spawn(function()
                repeat wait() until game.Players.LocalPlayer.PlayerGui.MainGui.SystemMessage.Background.ImageTransparency == 1 
                game.Players.LocalPlayer.PlayerGui.MainGui.SystemMessage.Background.ImageColor3 = Color3.fromRGB(206, 0, 0)
            end)
        end
        return sys_hook(...)
    end)
end)
wait()

actions:SystemMessage('[Sinsane]: INITIALIZING PLEASE WAIT')

for i,v in pairs(mob_data) do
    v['NameTag'] = 'dumbass bitch'
    wait()
end
if game.Workspace:FindFirstChild('BackgroundAssets') then
    for i,v in pairs(game.Workspace.BackgroundAssets:GetChildren()) do
        v:Remove()
        wait()
    end
end

actions['IsBusy'] = function() return false end

actions:Sprint()
actions:StopSprint()

-- FUNCTIONS

-- [Kill Mobs]
if class.Value == 'DualWielder' then
    name = 'DualWield'
    kill_1 = 'DualWieldUltimateSword'
    kill_2 = 'DualWieldUltimateSlam'
    kill_3 = 'CrossSlash'
    kill_4 = 'DashStrike'
elseif class.Value == 'Defender' then
    kill_3 = 'Spin'
    kill_4 = 'Groundbreaker'
elseif class.Value == 'Mage' then
    kill_3 = 'ArcaneWave'
    kill_4 = 'ArcaneBlastAOE'
    kill_5 = 'ArcaneBlast'
elseif class.Value == 'Swordmaster' then
    kill_3 = 'CrescentStrike'
    kill_4 = 'Leap'
elseif class.Value == 'Guardian' then
    kill_1 = 'SwordPrison'
    kill_3 = 'RockSpikes'
    kill_6 = 'SlashFury'
elseif class.Value == 'IcefireMage' then
    kill_2 = 'IcefireMageUltimateFrost'
    kill_3 = 'IceSpikes'
    kill_6 = 'LightingStrike'
    kill_4 = 'IcefireMageFireballBlast'
    kill_7 = 'IcefireMageFireball'
elseif class.Value == 'Paladin' then
    kill_3 = 'LightThrust'
    kill_6 = 'LightPaladin'
elseif class.Value == 'Demon' then
    name = 'DemonDPS'
    kill_3 = 'ScythThrow'
    kill_6 = 'DemonSoulAOE'
    kill_8 = 'DemonSoulDPS'
    kill_4 = 'DemonLifeStealAOE'
    rem = game.ReplicatedStorage.Shared.Combat.Skillsets.Demon.Ultimate
elseif class.Value == 'Beserker' then
    kill_4 = 'AggroSlam'
    kill_9 = 'GigaSpin'
    kill_6 = 'Fissure'
    rem = game:GetService('ReplicatedStorage').Shared.Combat.Skillsets.Berserker.BerserkHit
elseif class.Value == 'Dragoon' then
    kill_3 = 'DragoonCross'
    kill_6 = 'MultiStrike'
    kill_4 = 'DragoonFall'
    kill_1 = 'DragoonUltimate'
    rem2 = game:GetService('ReplicatedStorage').Shared.Combat.Skillsets.Dragoon.Ultimate
end

local count = 1
coroutine.wrap(function()
    while wait(1.5) do
        count = 1 
    end
end)()
    
function kill()
    wait(1/math.random(1, 10))
    if char and char:FindFirstChild('Head') then 
        local targets = { }
        local vec = { }
        if workspace:FindFirstChild('MissionObjects') then
            for i,v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == 'HealthProperties' and v.Parent.Parent.Name ~= 'Characters' then
                    table.insert(targets,v.Parent)
                    table.insert(vec,plr.Character.Head.Position+Vector3.new(math.random()+math.random(3,5),-(math.random()+5),math.random()))
                end
            end
        else
            for i,v in pairs(game.Workspace:GetChildren()) do
                if v:FindFirstChild('Collider') or v:FindFirstChild('BigCollider') then 
                    local col = v:FindFirstChild('Collider') or v:FindFirstChild('BigCollider') 
                    if col then
                        table.insert(targets,v)
                        table.insert(vec,plr.Character.Head.Position+Vector3.new(math.random()+math.random(3,5),-(math.random()+5),math.random()))
                    end
                end
            end
            for i,v in pairs(mobs_folder:GetChildren()) do
                if v:FindFirstChild('Collider') or v:FindFirstChild('BigCollider') or v:FindFirstChild('HealthProperties') then 
                    local col = v:FindFirstChild('Collider') or v:FindFirstChild('BigCollider') 
                    if col then
                        table.insert(targets,v)
                        table.insert(vec,plr.Character.Head.Position+Vector3.new(math.random()+math.random(3,5),-(math.random()+5),math.random()))
                    end
                end
            end
        end
        if vec[1] then

            for i = 0 , 3 ,1 do
                combat:AttackTargets(targets,vec,class.Value..tostring(count+i))
            end

            if kill_8 then 
                for i = 0 , 3 ,1 do
                    combat:AttackTargets(targets,vec,kill_8..tostring(count+i))
                end
            end

            if kill_1 then
                combat:AttackTargets(targets,vec,kill_1..tostring(count))
            end

            if ullt2 then
                combat:AttackTargets(targets,vec,kill_2)
            end

            if kill_3 then
                combat:AttackTargets(targets,vec,kill_3..tostring(count))
            end

            if kill_6 then
                combat:AttackTargets(targets,vec,kill_6..tostring(count))
            end

            if kill_7 then
                combat:AttackTargets(targets,vec,kill_7)
            end

            if kill_4 then
                combat:AttackTargets(targets,vec,kill_4)
            end

            if kill_5 then
                combat:AttackTargets(targets,vec,kill_5)
            end

            if rem then 
                rem:FireServer(targets)
            end

            if rem2 then
                rem2:FireServer()
            end
            count = count + 1
        end
    end
end
wait()
-- SCRIPT
Frame1 = library:AddFrame({
    name = 'Character Cheats'
})
    -- [Fly]
    Frame1:AddToggle('Fly', function(v1)
        actions:SetFlying(v1)
    end)

    -- [Freecam]
    Frame1:AddToggle('Freecam', function(v1)
        if not v1 then
            plr.Character.Collider.CFrame = cam.CFrame
        end
    
        require(client['Freecam']):Toggle(v1)
        uis.MouseIconEnabled = true
    end)
    
    -- [Anti Knockdown]
    local knockdown_bypass = false
    Frame1:AddToggle('Anti-Knockdown', function(v1)
        knockdown_bypass = not knockdown_bypass
    end)

    -- [Infinite Jump]
    local old_IsGrounded = actions['IsGrounded']
    Frame1:AddToggle('Infinite Jump', function(v1)
        if v1 then
            actions['IsGrounded'] = function() 
                return true 
            end
        else
            actions['IsGrounded'] = old_IsGrounded
        end
    end)

    -- [Spam Attack]
    local spam_attack
    Frame1:AddToggle('Spam Attack', function(v1)
        spam_attack = v1
        if v1 then wait(1) repeat wait()
            mouse1click()
            wait()
        until not spam_attack end
    end)

    -- [Return Parts]
    local part_folder = Instance.new('Folder', game.CoreGui['Main_Module'])
    Frame1:AddButton('Return Deleted Parts', function()
        for i,v in pairs(part_folder:GetChildren()) do
            v.Parent = game.Workspace
        end
    end)

    -- [Click TP]
    local tp_key
    Frame1:AddBox('Teleport Key', function(v1)
        local val = v1:upper()
        if Enum.KeyCode[val] then
            tp_key = val
        end
    end)

    -- [Delete Part]
    local delete_key
    Frame1:AddBox('Delete Part Key', function(v1)
        local val = v1:upper()
        if Enum.KeyCode[val] then
            delete_key = val
        end
    end) 

    -- [Skill Cooldown]
    for i,v in pairs(skills) do
        for i2,v2 in pairs(v) do
            if v2['Name'] == 'Dodge' then
                v2['Cooldown'] = 0
            end
        end
    end
	Frame1:AddBox('Skill Cooldown', function(v1)
		for i,v in pairs(skills) do
            for i2,v2 in pairs(v) do
                if v2['Cooldown'] ~= nil and v2['FunctionName'] ~= 'Attack' and v2['Name'] ~= 'Dodge' then
                    v2.Cooldown = tonumber(v1) or 0
                end
            end
        end
	end)

    -- [Walkspeed]
	Frame1:AddBox('Sprint Speed', function(v1)
		settings.SPRINT_WALKSPEED = tonumber(v1) or 28
	end)

    -- [Jump Power]
    Frame1:AddBox('Jump Multiplier', function(v1)
        local val = tonumber(v1) or 1
        local amt = Vector3.new(char:WaitForChild('Collider').Velocity.X, 80*val, char:WaitForChild('Collider').Velocity.Z)

		setconstant(actions['Jump'], 8, function() return amt end)
	end)
    
    -- [Fov]
    Frame1:AddBox('FOV', function(v1)
        setupvalue(client_camera['UpdateFOVTarget'], 2, tonumber(v1) or 70)
    end)
Frame2 = library:AddFrame({
    name = 'Environment Cheats'
})
    -- [Pickups]
    local pickup_items
    Frame2:AddToggle('Pickup All Items', function(v1)
        pickup_items = v1
        if v1 then repeat wait()
            if kill_aura then
                wait(2)
            end
            for i,v in pairs(coins:GetChildren()) do
                if v.ClassName == 'Part' then
                    v.CanCollide = false
                    v.CFrame = plr.Character.HumanoidRootPart.CFrame
                else
                    v.PrimaryPart.CanCollide = false
                    v.PrimaryPart.CFrame = plr.Character.HumanoidRootPart.CFrame
                end
            end
        until not pickup_items end
    end)

    -- [Disable Barriers]
    Frame2:AddToggle('Disable Barriers', function(v1)
        if barriers then
            for i,v in pairs(barriers) do
                if v.Transparency == 1 then
                    v.CanCollide = not v1
                end
            end
        end
    end)

    -- [Gravity]
    Frame2:AddBox('Gravity Multiplier', function(v1)
        local val = tonumber(v1) or 1

        game.Workspace.Gravity = 196.2*val
    end)

Frame3 = library:AddFrame({
    name = 'Mob Cheats'
})
    -- [Kill Aura]
    local kill_aura
    Frame3:AddToggle('Kill Mobs', function(v1)
        kill_aura = v1
        if v1 then repeat wait(1)
            kill()
        until not kill_aura end
    end)

    -- [Display BOSS Tag]
    Frame3:AddToggle('Disable BOSS Tag', function(v1)
        plr.PlayerGui.MainGui.BossHealthbar.Visible = not v1
    end)

    -- [Make all mobs BOSS]
    Frame3:AddToggle('Make all mobs BOSS', function(v1)
        if v1 then
            for i,v in pairs(mob_data) do
                if v['BossTag'] == false then
                    v['BossTag'] = 'fuckface'
                end
            end
        else
            for i,v in pairs(mob_data) do
                if v['BossTag'] == 'fuckface' then
                    v['BossTag'] = false
                end
            end
            for i,v in pairs(plr.PlayerGui.MainGui.BossHealthbar.Panels:GetChildren()) do
                if v:FindFirstChild('Boss') and v['Boss'].Text == 'FUCKFACE' then
                    v:Destroy()
                end
            end
        end
    end)

    -- [Mob Name]
    Frame3:AddBox('Display Name', function(v1)
        for i,v in pairs(mob_data) do
            v['NameTag'] = v1
        end
    end)

Frame4 = library:AddFrame({
    name = 'Guis'
})
    -- [Open Bank]
    Frame4:AddButton('Bank', function()
        guis:Get('Bank'):Toggle()
    end)

    -- [Open Upgrade]
    Frame4:AddButton('Upgrade', function()
        guis:Get('ItemUpgrade'):Toggle()
    end)

    -- [Open Teleport]
    Frame4:AddButton('Teleport', function()
        guis:Get('HubTeleport'):Toggle()
    end)

    -- [Open Waystones]
    Frame4:AddButton('Waystones', function()
        if plr.PlayerGui.MainGui.Waystones.Visible == false then
            guis:Get('Waystones'):Open()
        else
            guis:Get('Waystones'):Close()
        end
    end)

    -- [Open Incubator]
    Frame4:AddButton('Incubator', function()
        guis:Get('PetIncubator'):Open()
    end)

    -- [Open Sell]
    Frame4:AddButton('Sell', function()
        guis:Get('Sell'):Toggle()
    end)

    -- [Open Admin]
    Frame4:AddButton('Admin Panel', function()
        guis:Get('AdminItemPanel'):Toggle()
    end)

    -- [Print GUIS]
    --[[Frame4:AddButton('Test', function()
        for i,v in pairs(getupvalues(guis.Get)[1]) do
            print(i,v)
        end
    end)--]]

    -- [Inspect]
    Frame4:AddBox('Inspect [UNFINISHED]', function(v1)
        guis:Get('InspectCharacter'):Show(game.Players[v1])
    end)

    -- [System Message]
    Frame4:AddBox('System Message', function(v1)
        actions:SystemMessage(v1)
    end)

Frame5 = library:AddFrame({
    name = 'ESP'
})
    -- [Mob Esp]
    local mob_esp_table = { }
    Frame5:AddToggle('Mobs', function(v1)
        if v1 then
            for i,v in pairs(mobs_folder:GetChildren()) do
                if v:FindFirstChild('HealthProperties') and v.HealthProperties.Health.Value > 0 then
                    mob_esp = esp.new(v, Color3.new(255, 0, 0), true)
                    table.insert(mob_esp_table, mob_esp)
                    --[[spawn(function()
                        repeat wait() until not v:FindFirstChild('HealthProperties') or v.HealthProperties.Health.Value <= 0
                        mob_esp:Remove()
                        table.remove(mob_esp_table, table.find(mob_esp_table, mob_esp))
                    end)--]]
                end
            end
        else
            for i,v in pairs(mob_esp_table) do
                v:Remove()
            end
            local mob_esp_table = { }
        end
    end)

    -- [Player Esp]
    local plr_esp_table = { }
    Frame5:AddToggle('Players', function(v1)
        if v1 then
            plr.Character.Parent = game.Workspace
            plr_esp = esp.new(game.Workspace.Characters, Color3.new(0, 0, 255), true)
            plr.Character.Parent = game.Workspace.Characters
        else
            plr_esp:Remove()
        end
    end)

    -- [ESP Transparency]
    local esp_transparency
    Frame5:AddBox('Transparency', function(v1)
        esp_transparency = tonumber(v1) or 0
    end)

Frame6 = library:AddFrame({
    name = 'Teleports'
})
    -- [Waystone Teleport]
    for i,v in pairs(waystones:GetChildren()) do
        Frame6:AddButton('Waystone '..v.Name, function()
            plr.Character.Collider.CFrame = v.PrimaryPart.CFrame
        end)
    end
wait()
-- KEYBINDS
uis.InputBegan:Connect(function(input)
    -- [Toggle Gui]
    if input.KeyCode == Enum.KeyCode.L then
        for i,v in pairs(library.main) do
            v.Visible = not v.Visible
        end
    else
    -- [Teleport]
        if tp_key and input.KeyCode == Enum.KeyCode[tp_key] then
            --[[local tp_cframe = plr:GetMouse().Hit

            game.ReplicatedStorage.Shared.Teleport.WaystoneTeleport:FireServer(1, 0)
            wait(0.205)
            plr.Character.Collider.CFrame = tp_cframe--]]
            plr.Character.Collider.CFrame = plr:GetMouse().Hit
        elseif delete_key and input.KeyCode == Enum.KeyCode[delete_key] then
            plr:GetMouse().Target.Parent = part_folder
        end
    end
end)

-- ESP LOOPS
mobs_folder.ChildAdded:connect(function(child)
    wait()
    if child:FindFirstChild('HealthProperties') and child.HealthProperties.Health.Value > 0 then
        local mob_esp = esp.new(child, Color3.new(255, 0, 0), true)
        table.insert(mob_esp_table, mob_esp)
        --[[spawn(function()
            repeat wait() until not child:FindFirstChild('HealthPropertie') or child.HealthProperties.Health.Value <= 0
            mob_esp:Remove()
            table.remove(mob_esp_table, table.find(mob_esp_table, mob_esp))
        end)--]]
    end
end)
    
-- HOOKS

-- [Warn Breaker]
spawn(function()
    warn_hook = hookfunc(getrenv().warn, function()
        return
    end)
end)
wait()
-- [Anti Knockdown]
spawn(function()
    knockdown_hook = hookfunc(actions['Knockdown'], function(...)
        local args = {...}

        if args[2] == true and knockdown_bypass then
            return
        end
        return knockdown_hook(...)
    end)
end)
wait()
-- [Instant Sheath]
spawn(function()
    sheath_hook = hookfunc(actions['UseSkill'], function(...)
        local args = {...}
        if args[2] == 'Sheath' then
            plr.Character.Properties.Sheathed.Value = not plr.Character.Properties.Sheathed.Value
            return
        end
        return sheath_hook(...)
    end)
end)
wait()
-- [Anti-Stopper]
spawn(function()
    actions:UnlockJump()
    actions:UnlockMovement()
    stopjump_hook = hookfunc(actions['LockJump'], function()
        print('attempt at stop jump')
        return
    end)
    stopwalk_hook = hookfunc(actions['LockMovement'], function()
        print('attempt at stop walk')
        return
    end)
end)
wait()
-- [Walkspeed Bypass]
--[[spawn(function()
    walkspeed_hook = hookfunc(getrenv().time, function()
        return walkspeed_hook()*2
    end)
end)--]]
-- METATABLES
m = getrawmetatable(game)
old_Index = m.__index
old_New_Index = m.__newindex
old_Namecall = m.__namecall

setreadonly(m, false)

-- [Anti Kick / Anti Track]
m.__namecall = function(self, ...)
    local method = getnamecallmethod()
    local args = {...}

    if method == 'Kick' then
        print('kick attempt', ...)
        return
    elseif method == 'FireServer' then
        if tostring(self) == 'U' then
            return
        end
    end
    
    return old_Namecall(self, unpack(args))
end

-- [Esp Transparency]
spawn(function()
    while wait() do
        for i,v in pairs(game.CoreGui:WaitForChild('SINSANE_UI'):GetDescendants()) do--(game.CoreGui:WaitForChild('ESP'):GetDescendants()) do
            if v.ClassName == 'BoxHandleAdornment' then
                v.Transparency = esp_transparency
                if v.Adornee.Parent == nil then
                    v:Destroy()
                end
            end
        end
    end
end)

-- END

actions:SystemMessage('[Sinsane]: Script Loaded/Press L to toggle')