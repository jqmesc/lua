-- game https://web.roblox.com/games/863266079/Apocalypse-Rising-2

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer;

getgenv()._client = { 
    Framework = require(game.ReplicatedFirst.Framework);
    Player = require(game.ReplicatedFirst.Framework).Classes.Players.get();
    Inventory = require(game.ReplicatedFirst.Framework).Classes.Players.get().Character.Inventory;
};

getgenv()._shared = { 
    ItemData = game.ReplicatedStorage.ItemData;
};

local _settings = { 
    Weapon = {
        Recoil = false;
    };
};

-- // Functions // --
function _client:EditWeapons(v1, v2)
    for i,v in pairs(_shared.ItemData.Firearms:GetChildren()) do
        setreadonly(require(v), false);
        local _config = require(v);
        if not _config['info'] then
            local _info = { };
            for i,v in pairs(_config) do
                _info[i]=v;
            end
            _config['info'] = _info;
        end
        local _info = _config['info'];
        local _stat = v1;
        if type(_stat) == 'table' then
            setreadonly(_config[v1[1]], false);
            _config[v1[1]][v1[2]] = (v2 ~= nil or tostring(v2):lower() ~= 'default') and v2 or _info[v1[1]][v1[2]];
        else
            _config[v1] = (v2 ~= nil or tostring(v2):lower() ~= 'default') and v2 or _info[v1];
        end
    end
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Disable Recoil', function(v1)
    _settings.Weapon.Recoil = v1;
    _client:EditWeapons({'RecoilData', 'KickUpForce'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'RaiseForce'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'ShiftForce'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'SlideForce'}, v1 and 0);
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _settings.Weapon.Spread = v1;
    _client:EditWeapons({'RecoilData', 'SpreadBase'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'SpreadAddFPSZoom'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'SpreadAddFPSHip'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'SpreadAddTPSZoom'}, v1 and 0);
    _client:EditWeapons({'RecoilData', 'SpreadAddTPSHip'}, v1 and 0);
end)
Frame1:AddToggle('Inf Ammo', function(v1)
    for i,v in pairs(_client.Inventory.Equipment.Secondary) do
        v.Attachments.Ammo['__item'].WorkingAmount = v1 and math.huge or v.Attachments.Ammo['__item'].Amount;
    end
end)