-- here we go againnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn

-- 21532277 [Lobby]

--[[
[TO DO]

- set class
- suppress fire
- hold inf bags
- support for other maps

--]]

--[[ REPORT:
    Gravity: yes
    infjump: works on synapse not on sirhurt
    kick: probably
    restart: yes
    infammo: yes
    jp: yes
    ws: yes
    revive: no
    esp: yes (so good :weary:)
    infstamina: yes
    unlock: yes
    gunmods: no
    barriers: yes
    nopolice: no
    loot: yes
    breakglass: yes
    securebags: yes
    spot: yes
    instainteract: yes
    kill: yes
    aimbot: weird
    cams: yes
    wallhacks: yes
    god: yes
    instareload: no
    explosiveammo: yes on sirhurt
    camo: yes
    crosshair: yes
    scare: idk what the fuck this is
    fix: yeah i tihnk so
    capturekey: yes
    clr: yes
    cmds: yes
]]







local getconstants = getconstants or debug.getconstants
local getconstant = getconstant or debug.getconstant
local setupvalue = setupvalue or debug.setupvalue
local getupvalues = getupvalues or debug.getupvalues
local getupvalue = getupvalue or debug.getupvalue
local getinfo = getinfo or debug.getinfo
local hookfunc = hookfunc or hookfunction

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/Main%20Module.lua', true))()
local _Console = main_module['Console']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']

wait()

local gun_data = { }
for i,v in pairs(getgc(true)) do
    if type(v) == 'table' then
        if rawget(v, 'Jump') then
            movement = v
        elseif rawget(v, 'shootCameraPattern') then
            table.insert(gun_data, v)
        end
    elseif type(v) == 'function' then
        if getinfo(v).name == 'shoot' then
            key = getupvalue(v, 21)
        end
    end
end

for i,v in pairs(gun_data) do
    v['info'] = { }
    v['info']['data'] = { }
    for i2,v2 in pairs(v) do
        if i2 ~= 'info' and i2 ~= 'data' then
            v['info'][i2] = v2
        end
    end
    for i2,v2 in pairs(v.data) do
        if i2 ~= 'info' and i2 ~= 'data' then
            v['info']['data'][i2] = v2
        end
    end
    v['info'].toolName = v.tool.Name
    v['data'].AmmoPickup = math.huge
end

local remotes = { }
local guns = { }
-- Functions
function checkTable(v1, v2)
    for i,v in pairs(v1) do
        if v == v2 or tostring(v) == tostring(v2) then
            return v
        end
    end
    return
end

function findPlayer(v1)
    for i,v in pairs(game.Players:GetChildren()) do
        if v.Name:lower():find(v1:lower()) then
            return v
        end
    end
    return
end

function checkKeyKode(v1)
    v2 = pcall(function()
        if enum.KeyCode[v1:upper()] then
            return
        end
    end)

    if v2 then
        return true
    end

    return false
end

function fire(v1, ...)
    for i,v in pairs(remotes) do
        if tostring(v) == v1 then
            if v.ClassName == 'RemoteEvent' then
                v:FireServer(...)
            elseif v.ClassName == 'RemoteFunction' then
                v:InvokeServer(...)
            elseif v.ClassName == 'BindableEvent' then
                v:Fire(...)
            end
        end
    end
    return
end

function reloadGuns()
    for i,v in pairs(guns) do
        fire('Reload', v.Name)
    end
end

function interact(...)
    fire('StartInteraction', ...)
    wait()
    fire('CompleteInteraction', ...)
end

-- Game Variables
local plr = game.Players.LocalPlayer
local chars = game.Workspace.Criminals

local char
repeat wait()
    if chars:FindFirstChild(plr.Name) then
        char = chars[plr.Name]
    end 
until char

if char:FindFirstChild('Mask') then
    setupvalue(movement.SetSprint, 2, true)
end

local rs = game:GetService('ReplicatedStorage')
local uis = game:GetService('UserInputService')

local rsp = rs.RS_Package
local sgp = game.Players.LocalPlayer.PlayerGui['SG_Package']

local gui = sgp.MainGui
sgp.MaskOn.Value = true
for i,v in pairs(rsp.Remotes:GetChildren()) do
    table.insert(remotes, #remotes+1, v)
end
for i,v in pairs(rsp.Assets.Remotes:GetChildren()) do
    table.insert(remotes, #remotes+1, v)
end
for i,v in pairs(gui.Events:GetChildren()) do
    table.insert(remotes, #remotes+1, v)
end

for i,v in pairs(plr.Backpack:GetChildren()) do
    if v.ClassName == 'Tool' then
        guns[v.Name] = v
    end
end
for i,v in pairs(char:GetChildren()) do
    if v.ClassName == 'Tool' then
        guns[v.Name] = v
    end
end
local camera = game.Workspace.CurrentCamera
local citizens = game.Workspace.Citizens
local bodies = game.Workspace.Bodies
local police = game.Workspace.Police
local cams = game.Workspace.Cameras
local glass = game.Workspace.Glass
local bags = game.Workspace.Bags
local barriers = game.Workspace.InvisibleParts
local loot = game.Workspace.Lootables
local safe_spots = game.Workspace.SafeSpots

local map = game.Workspace.Map

local green = Color3.fromRGB(0, 255, 0)
local red = Color3.fromRGB(255, 0, 0)
local blue = Color3.fromRGB(0, 150, 255)
-- Console Start
local console = _Console:Create('No Notoriety V3', 'z')

-- [ Gravity ]
console:AddCommand('gravity', function(v1)
    game.Workspace.Gravity = 196.2 * (tonumber(v1) or 1)

    return 'Gravity multiplier set to '..tostring(tonumber(v1) or 1), green
end)

-- [ Inf Jump ]
local infjump = false
console:AddCommand('infjump', function(v1)
    --[[if v1 == 'on' or v1 == 'true' then
        infjump = true
    elseif v1 == 'off' or v1 == 'false' then
        infjump = false
    else
        infjump = not infjump
    end
    return 'Infinite Jump - Set to '..tostring(infjump), green--]]
    return 'Deprecated (blame the fucking bitchass broke mf krnl users)', red
end)

-- [ Force Kick ]
console:AddCommand('kick', function(v1)
    if findPlayer(v1) then
        if findPlayer(v1) ~= plr then
            fire('ForceKick', findPlayer(v1))
            return 'Kicked player '..findPlayer(v1).Name, green
        end
        return 'Tried to kick yourself', red
    end
    return 'Could not find player', red
end)

-- [ Restart Game ]
console:AddCommand('restart', function()
    fire('ForceReset')
    return 'Resetting game', green
end)

-- [ Inf Ammo ] (doge way)
local inf_ammo = false
console:AddCommand('infammo', function(v1)
    if v1 == 'on' or v1 == 'true' then
        inf_ammo = true
    elseif v1 == 'off' or v1 == 'false' then
        inf_ammo = false
    else
        inf_ammo = not inf_ammo
    end
    reloadGuns()
    char.PrimaryAmmo.Value = math.huge
    char.SecondaryAmmo.Value = math.huge
    return 'Infinite Ammo set to '..tostring(inf_ammo), green
end)

-- [ Jump Power ]
console:AddCommand('jp', function(v1)
    setupvalue(movement['Jump'],  8, function() return Vector3.new(char.Humanoid.MoveDirection.X, tonumber(v1) or 50, char.Humanoid.MoveDirection.Z) end)
    return 'Set jump power to '..tostring(tonumber(v1) or 50), green
end)

-- [ Run Speed ]
console:AddCommand('ws', function(v1)
    movement.RunSpeed = tonumber(v1) or 30
    return 'Set run speed to '..tostring(tonumber(v1) or 30), green
end)

-- [ Revive ]
console:AddCommand('revive', function(v1)
    if v1 == '' or v1:lower():find('all') then
        for i,v in pairs(chars:GetChildren()) do
            if v:FindFirstChild('Health') and v:FindFirstChild('Health').Value == 0 then
                repeat wait()
                    interact(v)
                until v.Health.Value ~= 0
            end
        end
    else
        local player = findPlayer(v1)
        if player then
            local playerchar = chars:FindFirstChild(player.Name)
            repeat wait()
                if playerchar and playerchar.Health.Value == 0 then
                    interact(playerchar)
                end
            until playerchar.Health.Value ~= 0
        end
    end
    return 'Revived players', green
end)

-- [ Esp Stuff ]
local esp_table = {
    esp_police = {  };
    esp_citizen = {  }
}
local police_esp = false
local esp_citizen = false
console:AddCommand('esp', function(v1)
    if v1:lower() == 'police' or v1:lower() == 'cops' then
        if not police_esp then
            local esp_p = esp.new(police, red, true)
            table.insert(esp_table.esp_police, #esp_table.esp_police+1, esp_p)
            police_esp = true
            return 'Esp - Police ESP Enabled', green
        end
        for i,v in pairs(esp_table.esp_police) do
            v:Remove()
        end
        esp_table.esp_police = { }
        police_esp = false
        return 'Esp - Police ESP Disabled', green
    elseif v1:lower() == 'citizens' or v1:lower() == 'civilians' or v1:lower() == 'civs' then
        if not esp_citizen then
            local esp_c = esp.new(citizens, blue, true)
            table.insert(esp_table.esp_citizen, #esp_table.esp_citizen+1, esp_c)
            esp_citizen = true
            return 'Esp - Citizen ESP Enabled', green
        end
        for i,v in pairs(esp_table.esp_citizen) do
            v:Remove()
        end
        esp_table.esp_citizen = { }
        local esp_citizen = false
        return 'Esp - Citizen ESP Disabled', green
    end
    return 'Esp doesnt exist', red
end)

-- [ Inf Stamina ]
local infstamina = false
console:AddCommand('infstamina', function(v1)
    if v1 == 'on' or v1 == 'true' then
        infstamina = true
    elseif v1 == 'off' or v1 == 'false' then
        infstamina = false
    else
        infstamina = not infstamina
    end
    char.Stamina.Value = char.MaxStamina.Value
    return 'Infinite Stamina set to '..tostring(infstamina), green
end)

-- [ Unlock ]
console:AddCommand('unlock', function()
    for i,v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == 'DoorModule' or v.Name == 'VaultModule' then
            spawn(function()
                for i = 1, 5 do
                    require(v):Open()
                    wait()
                end
            end)
        elseif v.Name == 'Safe' then
            spawn(function()
                for i  = 1, 5 do
                    interact(v)
                    wait()
                end
            end)
        end
    end
    --[[for i,v in pairs(getinstances()) do

    end--]]
end)

-- [ Gun Mods ]
local old_shake = require(plr.PlayerScripts.CameraShaker).ShakeOnce
local gun_mods
console:AddCommand('gunmods', function()
    gun_mods = not gun_mods
    for i,v in pairs(gun_data) do
        
        local data = v['data']
        local info = v['info']
        if gun_mods then

            data.Damage = math.huge
            data.FireDelay = 0
            data.FireMode = 'Auto'
            data.BulletSpeed = 200
            data.Accuracy = 100


            
            -- no recoil
            data.RecoilDirectionPattern = {Vector2.new(0,0)}
            data.RecoilCameraDirectionPattern = {Vector2.new(0,0)}
            v['shootCameraPattern'] = {Vector2.new(0, 0)}
            v['pushdist'] = 0.01
            require(plr.PlayerScripts.CameraShaker).ShakeOnce = function() return end

            for i,v in pairs(camera.CameraModel:GetDescendants()) do
                if v:IsA('ParticleEmitter') then
                    v.ZOffset = 100
                end
            end
        else

            data.Damage = info.data.Damage
            data.FireDelay = info.data.FireDelay
            data.FireMode = info.data.FireMode
            data.Accuracy = info.data.Accuracy

            -- no recoil
            data.RecoilDirectionPattern = info.data.RecoilDirectionPattern
            data.RecoilCameraDirectionPattern = info.data.RecoilCameraDirectionPattern
            v['shootCameraPattern'] = info.shootCameraPattern
            v['pushdist'] = info.pushdist
            require(plr.PlayerScripts.CameraShaker).ShakeOnce = old_shake

            for i,v in pairs(camera.CameraModel:GetDescendants()) do
                if v:IsA('ParticleEmitter') then
                    v.ZOffset = 0
                end
            end
        end

    end
    return 'Gun mods set to '..tostring(gun_mods), green
end)

-- [ Barriers ]
console:AddCommand('barriers', function()
    for i,v in pairs(barriers:GetChildren()) do
        pcall(function()
            v.CanCollide = not v.CanCollide
        end)
    end
    return 'Barriers toggled',  green
end)

-- [ No Police ]
local nopolice = false
console:AddCommand('nopolice', function(v1)
    v1 = v1:lower()
    if v1 == 'on' or v1 == 'true' then
        nopolice = true
        return 'No Police - On', green
    elseif v1 == 'off' or v1 == 'false' then
        nopolice = false
        return 'No Police - Off', green
    else
        nopolice = not nopolice
        nopolice_toggle = nopolice and 'On' or not nopolice and 'Off'
        return 'No Police - '..nopolice_toggle, green
    end
end)

spawn(function()
    while wait() do
        if nopolice then
            for i,c in pairs(police:GetChildren()) do
                if c:FindFirstChild('Humanoid') then
                    fire('Damage', 'Damage', key, c:FindFirstChild('Humanoid'), math.huge, c:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
                    fire('Damage', 'Damage', key, c:FindFirstChild('Humanoid'), math.huge, c:FindFirstChild('Torso'), 'UMP 45', camera.CFrame.lookVector)
                    fire('Damage', 'Damage', key, c:FindFirstChild('Humanoid'), math.huge, c:FindFirstChild('Head'), 'UMP 45', camera.CFrame.lookVector)
                end
            end
        end
    end
end)

-- [ Loot ]
local loot_items = {
    'DepositBox';
    'SmallJewels2';
    'Jewel';
    'JewelCrown';
    'DowntownKey';
    'KeyCard';
    'GoldBars';
    'Crowbar';
    'ATMmoney';
    'DepositMoney';
    'DepositMoneyStack';
    'DepositGoldBar';
    'DepositRing';
    'LootablePainting';
    'RandomCrate';
    'PokerChips';
    'Samurai';
    'Artifact';
    'CandyBucket';
    'Gift'

}
console:AddCommand('loot', function()

    spawn(function()
        for i,v in pairs(loot:GetDescendants()) do
            if v.ClassName == 'Model' then
                interact(v)
            end
        end
    end)

    spawn(function()
        if game.Workspace:FindFirstChild('BigLoot') then
            for i,v in pairs(game.Workspace:FindFirstChild('BigLoot'):GetDescendants()) do
                if v.ClassName == 'Model' then
                    interact(v)
                end
            end
        end
    end)

    spawn(function()
        for i,v in pairs(map:GetChildren()) do
            if v.Name == 'OpenedSafe' then
                for i2,v2 in pairs(v:GetChildren()) do
                    if v2.ClassName == 'Folder' and v2.Name ~= 'PosLoot' and #v2:GetChildren() > 0 then
                        for i3,v3 in pairs(v2:GetChildren()) do
                            interact(v3)
                        end
                    end
                end
            end
        end
    end)

    spawn(function()
        for i,v in pairs(safe_spots:GetChildren()) do
            if not v:IsA('Script') then
                interact(v)
            end
        end
    end)
    
    spawn(function()
        for i,v in pairs(game.Workspace:GetDescendants()) do
            if checkTable(loot_items, v.Name) ~= nil then
                interact(v)
            end
        end
    end)

    return 'Looted items', green
end)

-- [ Break Glass ]
console:AddCommand('breakglass', function()
    if #glass:GetChildren() > 0 then
        for i,v in pairs(glass:GetChildren()) do
            fire('HitObject', key, v, false, nil, nil, camera.CFrame.lookVector)
            fire('HitObject', key, v, false, nil, nil, camera.CFrame.lookVector)
        end
    end
end)

-- [ Secure Bags ]
console:AddCommand('securebags', function()
    if game.Workspace:FindFirstChild('BagSecuredArea') then
        local oldpos = plr.Character.HumanoidRootPart.CFrame
        local newpos = game.Workspace:FindFirstChild('BagSecuredArea').PrimaryPart.CFrame + Vector3.new(0, 3, 0)
        plr.Character.HumanoidRootPart.CFrame = newpos
        wait(.5)
        fire('ThrowBag', camera.CFrame.lookVector)
        wait(.5)
        plr.Character.HumanoidRootPart.CFrame = oldpos
    end
    return 'No area to secure bags', red
end)

-- [ Spot ]
console:AddCommand('spot', function(v1)
    if v1:lower() == 'guards' or v1:lower() == 'police' then
        for i,v in pairs(police:GetChildren()) do
            fire('PlayerYell', {v})
        end
    elseif v1:lower() == 'cams' or v1:lower() == 'cameras' then
        for i,v in pairs(cams:GetChildren()) do
            fire('PlayerYell', {v})
        end
    end
end)

-- [ Instant Interact ]
local instant_interact
console:AddCommand('instainteract', function()
    instant_interact = not instant_interact
    return 'Instant interact set to '..tostring(instant_interact), green
end)

-- [ Kill ]
console:AddCommand('kill', function(v1)
    if v1 == 'police' or v1 == 'cops' or v1 == '' then
        for i,v in pairs(police:GetChildren()) do
            fire('Damage', 'Damage', key, v:FindFirstChild('Humanoid'), math.huge, v:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
        end
        return 'Killed police', green
    elseif v1 == 'citizens' or v1 == 'civilians' or v1 == 'civs' then
        for i,v in pairs(citizens:GetChildren()) do
            fire('Damage', 'Damage', key, v:FindFirstChild('Humanoid'), math.huge, v:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
        end
        return 'Killed citizens', green
    elseif v1 == 'plrs' or v1 == 'players' then
        for i,v in pairs(chars:GetChildren()) do
            fire('Damage', 'Damage', key, v:FindFirstChild('Humanoid'), math.huge, v:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
        end
        return 'Killed players', green
    elseif v1 == 'others' then
        for i,v in pairs(chars:GetChildren()) do
            if v.Name ~= plr.Name then
                fire('Damage', 'Damage', key, v:FindFirstChild('Humanoid'), math.huge, v:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
            end
        end
        return 'Killed others', green
    elseif v1 == 'me' then
        fire('Damage', 'Damage', key, char:FindFirstChild('Humanoid'), math.huge, char:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
        return 'Killed yourself', green
    else
        local v2 = findPlayer(v1)

        if v2 and v2 ~= plr then
            fire('Damage', 'Damage', key, v2.Character:FindFirstChild('Humanoid'), math.huge, v2.Character:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
            return 'Killed '..v2.Name, green
        end
    end
    return 'Couldnt find player', red
end)

-- [ Aimbot ]
local aim_bot = aimbot.new({
    folder = police;
    target = 'Head';
    initial = false;
    smoothness = 0.5;
})
console:AddCommand('aimbot', function()
    aim_bot:Toggle(not aim_bot:IsToggled())
    return 'Aimbot set to '..tostring(aim_bot:IsToggled()), green
end)

-- [ Cams ]
console:AddCommand('cams', function()
    fire('UseSecurity', not gui.SecCamScreen.Visible)
    return 'Toggled security cams', green
end)

-- [ Wall Hacks ]
local wall_hacks
console:AddCommand('wallhacks', function()
    wall_hacks = not wall_hacks
    return 'Wall hacks set to '..tostring(wall_hacks), green
end)

-- [ God ]
local godmode
console:AddCommand('god', function()
    godmode = not godmode
    if godmode then
        fire('Damage', 'Damage', key, char:FindFirstChild('Humanoid'), -(char.Health.Total.Value - char.Health.Value), char:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
        connection = char.Health.Changed:connect(function(v1)
            local amt = -(char.Health.Total.Value - v1)

            if amt < 0 then
                fire('Damage', 'Damage', key, char:FindFirstChild('Humanoid'), amt, char:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
            end
        end)
    else
        connection:Disconnect()
        local amt = -(char.Health.Total.Value - char.Health.Value)

        if amt > 0 then
            amt = -amt
        end
        fire('Damage', 'Damage', key, char:FindFirstChild('Humanoid'), amt, char:FindFirstChild('HumanoidRootPart'), 'UMP 45', camera.CFrame.lookVector)
    end
    return 'God mode set to '..tostring(godmode), green
end)

-- [ Instant Reload ]
local instant_reload
console:AddCommand('instareload', function()
    instant_reload = not instant_reload
    return 'Instant reload set to '..tostring(instant_reload), green
end)


-- [ Explosive Ammo ]
local explosive_ammo
console:AddCommand('explosiveammo', function()
    explosive_ammo = not explosive_ammo
    if explosive_ammo then
        for i,v in pairs(gun_data) do
            v.data.BulletType = 'rpg'
            v.data.Damage = math.huge
            v.tool.Name = 'RPG-7'
        end
    else
        for i,v in pairs(gun_data) do
            v.data.BulletType = v.info.data.BulletType
            v.tool.Name = v.info.toolName
            if not gun_mods then
                v.data.Damage = v.info.data.Damage
            end
        end
    end
    return 'Explosive ammo set to '..tostring(explosive_ammo), green
end)

-- [ Camo ]
local gun_camo
console:AddCommand('camo', function()
    gun_camo = not gun_camo
    if gun_camo then
        for i,v in pairs(camera.CameraModel:GetDescendants()) do
            pcall(Rainbowify, v, 'Color')
        end
    else
        for i,v in pairs(camera.CameraModel:GetDescendants()) do
            pcall(DeRainbowify, v, 'Color')
        end
    end
    return 'Gun camo set to '..tostring(gun_camo), 'Rainbow'
end)

-- [ Crosshair ]
console:AddCommand('crosshair', function()
    if not gui:FindFirstChild('CROSSHAIR') then
        local crosshair = Instance.new('Frame', gui)
        crosshair.Size = UDim2.new(0,2,0,2)
        crosshair.Position = UDim2.new(0.5, 0, 0.5, 0)
        crosshair.BorderSizePixel = 0
        crosshair.Name = 'CROSSHAIR'
        Rainbowify(crosshair, 'BackgroundColor3')

        spawn(function()
            while wait() do
                if crosshair then
                    if uis:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
                        crosshair.BackgroundTransparency = 1
                    else
                        crosshair.BackgroundTransparency = 0
                    end
                end
            end
        end)
        return 'Crosshair enabled', green
    else
        gui:FindFirstChild('CROSSHAIR'):Destroy()
    end
    return 'Crosshair disabled', green
end)

-- [ Scare ]
console:AddCommand('scare', function()
    for i,v in pairs(citizens:GetChildren()) do
        fire('PlayerYell', {v})
    end
end)

-- [ Fix ]
console:AddCommand('fix', function()
    local broken_drills = { }
    for i,v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == 'BrokenDrill' then
            table.insert(broken_drills, v)
        end
    end

    if #broken_drills == 0 then
        return 'No drills to fix', red
    end

    repeat wait()
        for i,v in pairs(broken_drills) do
            interact(v)
        end
    until not checkTable(broken_drills, 'BrokenDrill')
    broken_drills = { }
    return 'Drills fixed', green
end)

-- [ Capture Key ]
console:AddCommand('capturekey', function(v1)
    console:ChangeCaptureKey(v1)
end)

-- [ Clear Console ]
console:AddCommand('clr', function()
    console:Clear()
end)



-- [ Commands ]
console:AddCommand('cmds', function()
    console:Commands(1, 20)
    console:Commands(21)
end)

console:AddCommand('credits', function()
    return 'Credits to Sinsane [jaames#9911] and veryunhappydoge [doge#9999]', blue
end)

--[[
-- [  ]
console:AddCommand('', function()
    
end)
--]]




uis.InputBegan:connect(function(input, gpi)
    if gpi then return end
    if not console:IsFocused() then 
        -- [ Unlock ]
        if input.KeyCode == Enum.KeyCode.U then
            for i,v in pairs(game.Workspace:GetDescendants()) do
                if v.Name == 'DoorModule' or v.Name == 'VaultModule' then
                    spawn(function()
                        for i = 1, 5 do
                            require(v):Open()
                            wait()
                        end
                    end)
                elseif v.Name == 'Safe' then
                    spawn(function()
                        for i  = 1, 5 do
                            interact(v)
                            wait()
                        end
                    end)
                end
            end
            -- [ Loot ]
        elseif input.KeyCode == Enum.KeyCode.L then
            spawn(function()
                for i,v in pairs(loot:GetDescendants()) do
                    if v.ClassName == 'Model' then
                        interact(v)
                    end
                end
            end)
        
            spawn(function()
                for i,v in pairs(map:GetChildren()) do
                    if v.Name == 'OpenedSafe' then
                        for i2,v2 in pairs(v:GetChildren()) do
                            if v2.ClassName == 'Folder' and v2.Name ~= 'PosLoot' and #v2:GetChildren() > 0 then
                                for i3,v3 in pairs(v2:GetChildren()) do
                                    interact(v3)
                                end
                            end
                        end
                    end
                end
            end)
        
            spawn(function()
                for i,v in pairs(safe_spots:GetChildren()) do
                    if not v:IsA('Script') then
                        interact(v)
                    end
                end
            end)
            
            spawn(function()
                for i,v in pairs(game.Workspace:GetDescendants()) do
                    if checkTable(loot_items, v.Name) ~= nil then
                        interact(v)
                    end
                end
            end)
        -- [ Toggle ]
        elseif input.KeyCode == Enum.KeyCode.P then
            console:Toggle()
        -- [ Mask ]
        elseif input.KeyCode == Enum.KeyCode.G and char:FindFirstChild('Mask') then
            setupvalue(movement.SetSprint, 2, false)
        end
    end
end)










-- Hooks
-- [ Inf Jump ]
--[[spawn(function()
    jump_hook = hookfunc(movement.IsOnGround, function()
        if infjump then
            return true
        end
        return jump_hook()
    end)
end)--]]

-- [ Insta Reload ]
for i,v in pairs(gun_data) do
    spawn(function()
        v['reloadhook'] = hookfunc(v.setreloading, function(...)
            if instant_reload then
                reloadGuns()
                return
            end
            return v['reloadhook'](...)
        end)
    end)
end

-- Metatables
m = getrawmetatable(game)
oldIndex = m.__index
oldNamecall = m.__namecall

setreadonly(m, false)

m.__index = function(t, k)

    if k == 'Value' then
        local name = tostring(t)
        if name == 'Stamina' and infstamina then
            return char.MaxStamina.Value
        elseif name == 'BodyBags' then
            return math.huge
        elseif name == 'BagSpeed' then
            return 1
        elseif (name == 'PrimaryAmmo' or name == 'SecondaryAmmo') and inf_ammo then --inf ammo (doge way)
            return math.huge
        elseif name == 'Health' and godmode and t:IsDescendantOf(char) then
            return t.Total.Value
        elseif name == 'MaskOn' then
            return true
        elseif (name == 'Loot Bag' or name == 'Body Bag') and not game:GetService('UserInputService'):IsKeyDown(Enum.KeyCode.G) then
            return
        end
    end
    
    return oldIndex(t, k)
end

m.__namecall = function(self, ...)
    local args = {...}
    local method = getnamecallmethod()

    if method == 'FireServer' then
        local name = tostring(self)
        -- if name == 'Bullet' then inf ammo (sinsane way)
        --     local data = args[1]

        --     data['UseAmmo'] = useammo
        -- end
        if name == 'StartInteraction' and instant_interact then
            print('do')
            fire('CompleteInteraction', ...)
            fire('CancelInteraction', ...)
            return
        end
    elseif method == 'FindFirstChild' then
        if args[1] == 'Mask ON' then
            return true
        end
    elseif method == 'IsDescendantOf' and args[1] == game.Workspace.InvisibleParts and wall_hacks and not explosive_ammo then
        if self:IsDescendantOf(map) or self:IsDescendantOf(game.Workspace.BagSecuredArea) then
            return true
        end
    elseif method == 'Connect' and tostring(self) == 'CameraShake' and gun_mods then
        return
    end
    return oldNamecall(self, unpack(args))
end

police.ChildAdded:Connect(function(c)
    if police_esp then
        c:WaitForChild('Head')
        c:WaitForChild('Torso')
        local esp_p = esp.new(c, red, true)
        table.insert(esp_table.esp_police, #esp_table.esp_police+1, esp_p)
    end
end)
citizens.ChildAdded:Connect(function(c)
    if esp_citizen then
        c:WaitForChild('Head')
        c:WaitForChild('Torso')
        local esp_c = esp.new(c, blue, true)
        table.insert(esp_table.esp_citizen, #esp_table.esp_citizen+1, esp_p)
    end
end)
bodies.ChildAdded:connect(function(c)
    wait()
    local t = tick()
    spawn(function()
        repeat wait()
            if c.Name == 'Pager' then
                interact(c)
            end
        until tick() - t >= 10
    end)
end)
game.Workspace.ChildAdded:connect(function(child)
    wait()
    if child.Name == 'AmmoPart' then
        firetouchinterest(char.HumanoidRootPart, child, 0)
    elseif child.Name == 'PoliceCar' or child.Name == 'SwatVan' then
        child.Parent = game.Workspace.InvisibleParts
    end
end)
camera.CameraModel.ChildAdded:connect(function(child)
    wait()
    if child:IsA('Model') then
        if gun_camo then
            for i,v in pairs(child:GetDescendants()) do
                pcall(Rainbowify, v, 'Color')
            end
        end
        if gun_mods then
            for i,v in pairs(child:GetDescendants()) do
                if v:IsA('ParticleEmitter') then
                    v.ZOffset = 100
                end
            end
        end
    end
end)

console:Commands(1, 20)
console:Commands(21)
console:Output('Credits to Sinsane [jaames#9911] and veryunhappydoge [doge#9999]', blue)