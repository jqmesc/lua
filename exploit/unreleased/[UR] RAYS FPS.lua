-- game https://www.roblox.com/games/10784373080/RAYS-FPS

-- // Library // --
local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local functions = main_module['Functions']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local message = main_module['Message']
local Keybind = main_module['Keybind']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

-- // Variables // --
local _plr = game.Players.LocalPlayer;

getgenv()._client = { 
    Stats = game.HttpService:JSONDecode(_plr:WaitForChild('Statistics').Value);
    GunScript = _plr.Character and getsenv(_plr.Character:WaitForChild('GunHandler')) or getsenv(_plr.CharacterAdded:Wait():WaitForChild('GunHandler'));
};

getgenv()._shared = {
    AimFolder = { };
    EspFolder = { };
    Remotes = getupvalue(require(game.ReplicatedStorage.Functions.GetRemote), 2);
    Functions = game.ReplicatedStorage.Functions;
    Modules = game.ReplicatedStorage.Modules;
};

local _settings = { 
    Weapon = {
        Reload = false;
        Recoil = false;
    };
    Game = {
        Fly = false;
    };
    Player = {
        Bhop = false;
        Sprint = 24;
        Walk = 16;
        Crouch = 8;
        Jump = 35;
    };
};

-- // Functions // --
function _shared:ClearFolders()
    for i,v in pairs(_shared.AimFolder) do
        table.remove(_shared.AimFolder, i)
    end
    for i,v in pairs(_shared.EspFolder) do
        _shared.EspFolder[i] = nil
    end
    --print('folders cleared')
end
function _shared:UpdatedFolders()
    _shared:ClearFolders()
    for i,v in pairs(game.Players:GetChildren()) do
        if v.Character and v.Team ~= _plr.Team then
            _shared.EspFolder[v.Character] = v.Character;
            table.insert(_shared.AimFolder, v.Character);
        end
    end
    --print('folders updated')
end
function _shared:UpdateMap()
    _shared.Map = game.Workspace.Map;
    _shared.Map.ChildAdded:connect(function(c)
        if _plr.Character then
            local _touch = c:WaitForChild('TouchInterest', 1);
            firetouchinterest(_plr.Character.Head, _touch.Parent, 0)
        end
    end)
    print('[script] - Map Grabbed')
end

function _client:Shoot()
    require(game.ReplicatedStorage.Functions.Shoot)();
end
function _client:SwapGun()
    _shared.Remotes['SwapGun']:FireServer();
end
function _client:onSpawn()
    _client.GunScript = getsenv(_plr.Character:WaitForChild('GunHandler'));
    _shared.Map = game.Workspace:WaitForChild('Map');
    _plr.Character.Humanoid.JumpPower = _settings.Player.Jump;

    -- Insta Reload
    local _reload = _client.GunScript.reload
    _client.GunScript.reload = function(...)
        if _settings.Weapon.Reload then
            _shared.Remotes['Reload']:FireServer();
            _plr:SetAttribute('Ammo', _plr.MaxAmmo.Value);
            return;
        end
        return _reload(...);
    end
    -- Dog Tags
    for i,v in pairs(_shared.Map:GetChildren()) do
        if v.Name == 'Tag' then
            firetouchinterest(_plr.Character.Head, v, 0)
        end
    end

    print('[script] - Character Grabbed')
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Insta Reload', function(v1)
    _settings.Weapon.Reload = v1;
end)

local _recoil = require(_shared.Modules.CameraController)['SetRecoil'];
Frame1:AddToggle('Disable Recoil', function(v1)
    _settings.Weapon.Recoil = v1;
    require(_shared.Modules.CameraController)['SetRecoil'] = v1 and function() return end or _recoil;
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder,smoothness=.25})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)
local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdatedFolders()
    else
        _esp:Remove()
    end
end)

local _fly = Frame2:AddToggle('Fly', function(v1)
    _settings.Game.Fly = v1
    if v1 then
        local _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
		repeat game:GetService('RunService').RenderStepped:wait()

            if _plr.Character and _plr.Character:FindFirstChild('HumanoidRootPart') and not _plr.Character.HumanoidRootPart:FindFirstChild('BodyVelocity') then
                _bodyVelocity = Instance.new('BodyVelocity', _plr.Character.HumanoidRootPart)
                --print('replaced body velocity')
            end
            
            local cam = game.Workspace.CurrentCamera.CFrame
			
			local v1 = Vector3.new()
			
			if uis:IsKeyDown(Enum.KeyCode.W) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
            if uis:IsKeyDown(Enum.KeyCode.LeftShift) then
				v1 = v1 + Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)*10
			end
			if uis:IsKeyDown(Enum.KeyCode.S) then
				v1 = v1 - Vector3.new(cam.LookVector.X, 0, cam.LookVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.D) then
				v1 = v1 + Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.A) then
				v1 = v1 - Vector3.new(cam.RightVector.X, 0, cam.RightVector.Z)
			end
			if uis:IsKeyDown(Enum.KeyCode.Space) then
				v1 = v1 + Vector3.new(0, 1, 0)
			end
			if uis:IsKeyDown(Enum.KeyCode.LeftAlt) then
				v1 = v1 - Vector3.new(0, .5, 0)
			end

			_bodyVelocity.Velocity = v1 * 100
			
		until not _settings.Game.Fly
		_bodyVelocity:Destroy()
    end
end)
local _recent = { }
local _noclip = Frame2:AddToggle('Noclip', function(v1) -- Noclip
    local _config = {
        debounce = .1;
        size = Vector3.new(5,5,5);
        offset = Vector3.new(0,1.6,0);
        transparency = 1;
    };
    if v1 then
        local _char = _plr.Character
        local _hrp = _char:WaitForChild('HumanoidRootPart')
        local _part = Instance.new('Part', _char)
        _part.Anchored = true
        _part.CanCollide = false
        _part.Size = _config.size
        _part.Transparency = _config.transparency
        _part.CFrame = _hrp.CFrame
        
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('On', Enum.RenderPriority.Camera.Value, function()
                if not _char.Parent then
                    repeat game:GetService('RunService').RenderStepped:wait() until _plr.Character;
                    _part:Destroy();

                    _char = _plr.Character
                    _hrp = _char:WaitForChild('HumanoidRootPart')
                    _part = Instance.new('Part', _char)
                    _part.Anchored = true
                    _part.CanCollide = false
                    _part.Size = _config.size
                    _part.Transparency = _config.transparency
                    _part.CFrame = _hrp.CFrame
                end
                _part.CFrame = _hrp.CFrame + _config.offset
                local _parts = game.Workspace:GetPartsInPart(_part)
    
                for i,v in pairs(_parts) do
                    if _recent[v] or (not v:IsDescendantOf(_char) and v.CanCollide == true) then
                        _recent[v] = tick()
                        v.CanCollide = false
                    end
                end
            end)
        end)
        spawn(function()
            game:GetService('RunService'):BindToRenderStep('Off', Enum.RenderPriority.Camera.Value, function()
                for i,v in pairs(_recent) do
                    if tick() - v >= _config.debounce then
                        i.CanCollide = true
                    end
                end
            end)
        end)
    else
        game:GetService('RunService'):UnbindFromRenderStep('On');
        game:GetService('RunService'):UnbindFromRenderStep('Off');
        for i,v in pairs(_recent) do
            i.CanCollide = true
        end
    end
end)

Frame2:AddToggle('Enable BunnyHop', function(v1)
    _settings.Player.Bhop = v1;
end)

Frame2:AddBox('Sprint Speed', function(v1)
    _settings.Player.Sprint = tonumber(v1) or 24;
end)

Frame2:AddBox('Jump Power', function(v1)
    _settings.Player.Jump = tonumber(v1) or 35;
    if _plr.Character then
        _plr.Character.Humanoid.JumpPower = _settings.Player.Jump;
    end
end)

-- // GUI Frame 3 // --
local Frame3 = library:AddFrame({name='Env Hax'})

local _gravity = game.Workspace.Gravity;
Frame3:AddBox('Gravity', function(v1)
    game.Workspace.Gravity = tonumber(v1) or _gravity;
end)

-- // Keybinds // --
Keybind:NewBind(Enum.KeyCode.RightShift, function() -- Library Keybind
    library:Toggle();
end)
Keybind:NewBind(Enum.KeyCode.F, function() -- Fly Keybind
    _fly:Toggle()
end)
Keybind:NewBind(Enum.KeyCode.N, function() -- Noclip Keybind
    _noclip:Toggle()
end)

-- // Metatables // --
m = getrawmetatable(game)
setreadonly(m, false)

old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

m.__newindex = function(t, k, v)
    if tostring(t) == 'Humanoid' and k == 'WalkSpeed' and v == 24 then -- Sprint Speed
        v = _settings.Player.Sprint;
    elseif tostring(t) == 'Humanoid' and k == 'JumpPower' then -- Jump Power
        v = _settings.Player.Jump;
    end
    return oldnw(t, k, v)
end
m.__namecall = function(_shared, ...)
    local args = {...}

    if getnamecallmethod() == 'FireServer' and args[1] == 'Ban' then -- AntiAntiCheat
        print('[script] Ban Attempt')
        return
    elseif getnamecallmethod() == 'Create' and args[1] == _plr.Character.Humanoid and _settings.Player.Bhop then
        args[3] = {JumpPower = _settings.Player.Jump};
    end

    return oldnc(_shared, unpack(args))
end

-- // Spy // --
_plr.CharacterAdded:connect(function(c)
    _client:onSpawn();
end)
game.Workspace.ChildAdded:connect(function(c)
    local _hum = c:WaitForChild('Humanoid', 1);
    if _hum then
        _shared:UpdatedFolders();
    elseif c.Name == 'Map' then
        _shared:UpdateMap();
    end
end)

-- // Execute // --
_shared:UpdateMap();
_client:onSpawn();

print('[script] - Execute Success')