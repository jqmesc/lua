-- game https://www.roblox.com/games/7209652693/Block-Defense-Alpha

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer

local _client = { }
local _shared = { 
    modules = game.ReplicatedStorage.Shared;
    monsters = game.Workspace.Monsters;
    EspFolder = { };
    AimFolder = { };
}

local _settings = {
    gun_mods = {
        Reload = false;
        Walls = true;
    };
}

-- // Functions // --
function _shared:UpdatedFolders()
    for i,v in pairs(self.monsters:GetChildren()) do
        if v then
            _shared.EspFolder[v] = v
            table.insert(_shared.AimFolder, v)
            --print('enemy player ' .. v.Name .. ' inserted')
        end
    end
    --warn('folders updated')
end
function _client:EditCurrentWeapon(v1, v2)
    local gunData = getupvalue(require(_shared.modules.Guns).Fire, 2)
    if not gunData['info'] then
        local t = { }
        for i,v in pairs(gunData) do
            t[i]=v
        end
        gunData['info'] = t
    end
    local gunInfo = gunData['info']

    gunData[v1] = tostring(v2):lower() ~= 'default' and v2 or gunInfo[v1]
end

-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Gun Hax'})

Frame1:AddToggle('Inf Ammo', function(v1)
    setupvalue(require(_shared.modules.Guns).DoShot, 6, v1 and math.huge or 0)
end)
Frame1:AddToggle('Wallhacks', function(v1)
    _settings.gun_mods.Walls = v1
end)
Frame1:AddToggle('Insta Reload', function(v1)
    _settings.gun_mods.Reload = v1
end)
Frame1:AddToggle('Disable Recoil', function(v1)
    _client:EditCurrentWeapon('Shake', v1 and Vector2.new() or 'default')
end)
Frame1:AddToggle('Disable Spread', function(v1)
    _client:EditCurrentWeapon('Spread', v1 and 0 or 'default')
end)
Frame1:AddToggle('Disable Fire Delay', function(v1)
    _client:EditCurrentWeapon('FireRate', v1 and 0.001 or 'default')
end)
Frame1:AddSwitch('Fire Mode', {'Default', 'Auto', 'Semi'}, function(v1)
    _client:EditCurrentWeapon('Automatic', (v1 == 'Auto' and true) or (v1 == 'Semi' and false) or v1)
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Plr Hax'})

local _esp
Frame2:AddToggle('Esp', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.EspFolder,color=Color3.fromRGB(255,0,0)})
        _shared:UpdatedFolders()
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.AimFolder,smoothness=0.5})
        _shared:UpdatedFolders()
    else
        _aimbot:Remove()
    end
end)

-- // Hooks // --
local _hooks = { }
_hooks.walls = hookfunc(require(_shared.modules.Guns).CanShootThrough, function(...)
    local args = {...}
    if _settings.gun_mods['Walls'] then
        if not args[2]:IsDescendantOf(game.Workspace.Monsters) then
            return true
        else
            print('Shot monster')
        end
    end
end)

-- // Metatables // --
m = getrawmetatable(game)
old_Index = m.__index
oldnc = m.__namecall
oldnw = m.__newindex
oldc = m.__call

setreadonly(m, false)

m.__index = function(t, k)
    if tostring(t) == 'Reload' and k == 'Length' and _settings.gun_mods['Reload'] then -- Set reload length to 0
        return 0
    end
    return old_Index(t, k)
end

m.__namecall = function(self, ...)
    local args = {...}
    if getnamecallmethod() == 'Play' and tostring(self) == 'Reload' and _settings.gun_mods['Reload'] then -- Disable reload animation

        return
    
    end
    
    return oldnc(self, unpack(args))
end

-- // Monster spy // --
_shared.monsters.ChildAdded:connect(function(child)
    _shared:UpdatedFolders()
end)