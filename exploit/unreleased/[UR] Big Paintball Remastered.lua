-- game https://www.roblox.com/games/3527629287/BIG-Paintball

-- BIG PAINTBALL RESMASTERED!!!!! (most popular released script for some reason) (cause kids are ass at games and need cheats to get kills)

local main_module = loadstring(game:HttpGet('https://raw.githubusercontent.com/Sinscrips/source_scripts/main/main_module_v2.lua', true))()
local library = main_module['Library']
local esp = main_module['Esp']
local aimbot = main_module['Aimbot']
local uis = game:GetService('UserInputService')
local cls = game:GetService('CollectionService')

local _plr = game.Players.LocalPlayer
local _variables = game.Workspace.__VARIABLES
local _map = game.Workspace.__MAP

local Framework = require(game:GetService('ReplicatedStorage'):FindFirstChild('Framework'):FindFirstChild('Library'))
local FirstPersonEnv = getsenv(_plr.PlayerScripts:FindFirstChild('Scripts'):FindFirstChild('Game'):FindFirstChild('First Person Controller'))


-- // GETGC (fuck ass) // --
local _doJump
local _isPlanted

for _,f in next, getgc() do
    if type(f)=='function' and islclosure(f) and not is_synapse_function(f) then
        if getinfo(f).name=='doJump' and getinfo(f).source:find('Movement')then
            _doJump = f
            _isPlanted = getupvalues(_doJump)[1]
        end
    end
end


local _client = { }
local _shared = { 
    GunSettings = Framework.Directory.Guns;
    espfolder = { };
    aimfolder =  { };
}
_settings = {
    aimbot = false;
    esp = false;
    infjump = false;
    unlockAll = false;
    bhopping = false
}

for i,v in pairs(_shared.GunSettings) do
    local t = { }
    for i2,v2 in pairs(v) do
        t[i2]=v2
    end
    v['settings'] = t
end
-- // Functions // --
function _client:EditCurrentWeapon(v1, v2)
    for i,v in pairs(_shared.GunSettings) do
        -- print(v['settings'][v1])
        -- print(dump(v,2))
        v[v1] = tostring(v2):lower() ~= 'default' and v2 or v['settings'][v1]
    end
end




-- // GUI Frame 1 // --
local Frame1 = library:AddFrame({name='Weapon Hax'})

local _ignore = Instance.new('Folder', game.Workspace)
Frame1:AddToggle('Wallbang', function(v1)
    if v1 then
        _map.Map.Parent = _ignore
        _map.Spawns.Parent = _ignore
        _map.SpawnShields.Parent = _ignore
    else
        for i,v in pairs(_ignore:GetChildren()) do
            v.Parent = _map
        end
    end
end)
Frame1:AddToggle('Disable Fire Delay', function(v1)
    _client:EditCurrentWeapon('shotrate', v1 and 0.0001 or 'default')
end)
Frame1:AddToggle('Max Velocity', function(v1)
    _client:EditCurrentWeapon('velocity', v1 and 5000 or 'default')
end)
Framework.Signal.Fire('Change Max Walkspeed',100)
Frame1:AddToggle('funky walkspeed bypass',function(v1) --speed hacks lol
    _client:EditCurrentWeapon('additionalSpeed',v1 and 100 or 'default')
end)
Frame1:AddToggle('Inf Jump',function(v1)
    _settings.infjump = v1
end)
Frame1:AddToggle('Bhop',function(v1)
    _settings.bhopping = v1 
end)
Frame1:AddToggle('Unlock all',function(v1)
    _settings.unlockAll = v1
end)
Frame1:AddSwitch('Fire Mode', {'Default', 'Automatic', 'Semi'}, function(v1)
    _client:EditCurrentWeapon('automatic', v1=='Automatic' and true or v1=='Semi' and false or 'default')
end)

-- // GUI Frame 2 // --
local Frame2 = library:AddFrame({name='Player Hax'})

local _esp
Frame2:AddToggle('ESP', function(v1)
    if v1 then
        _esp = esp.new({folder=_shared.espfolder,color=Color3.fromRGB(255,0,0)})
    else
        _esp:Remove()
    end
end)

local _aimbot
Frame2:AddToggle('Aimbot', function(v1)
    if v1 then
        _aimbot = aimbot.new({folder=_shared.aimfolder})
    else
        _aimbot:Remove()
    end
end)

Frame2:AddButton('Suicide', function() --so smart fr
    Framework.Player.Get('Humanoid').Health = 0
end)

-- // GUI Frame 3 // --
local Frame3 = library:AddFrame({name='Misc'})

Frame3:AddButton('Rejoin',function()
    game:GetService('TeleportService'):Teleport(game.PlaceId)
end)

-- // Property Spy // --
game.Workspace.ChildAdded:connect(function(char) -- char spawned
    if char:WaitForChild('Humanoid') then
        local enemies = { }
        for i,v in pairs(game.Workspace:GetChildren()) do
            local player = game.Players:GetPlayerFromCharacter(v)

            if player and player ~= _plr then
                if _variables.RoundType.Value ~= 'FFA' then
                    if player.TeamColor ~= _plr.TeamColor then
                        table.insert(enemies, player.Character)
                    end
                else
                    table.insert(enemies, player.Character)
                end
            end
        end

        for i,v in pairs(enemies) do
            self.espfolder[v] = v
            table.insert(self.aimfolder, v)
        end
    end
end)

function HumanoidStateChanged(old,new)
    if new==Enum.HumanoidStateType.Landed then
        if _settings.bhopping and uis:IsKeyDown(Enum.KeyCode.Space) then
            game:GetService('RunService').RenderStepped:Wait()
            _doJump()
        end
    end
end
_plr.Character.Humanoid.StateChanged:Connect(HumanoidStateChanged)
_plr.CharacterAdded:Connect(function()
    _plr.Character:WaitForChild('Humanoid').StateChanged:Connect(HumanoidStateChanged) 
end)
-- // Hooks // --
local old_network_fire = Framework.Network.Fire
Framework.Network.Fire = function(...)
    local args = {...}
    if _settings.unlockAll and args[1]=='Request Respawn' then
        args[2]='1'
    end
    return old_network_fire(unpack(args))
end

local old_first_person_own = FirstPersonEnv.DoesOwnGun
FirstPersonEnv.DoesOwnGun = function(...)
    return _settings.unlockAll and true or old_first_person_own(...)
end
local old_does_own_gun = Framework.GunCmds.DoesOwnGun
Framework.GunCmds.DoesOwnGun = function(...)
    return _settings.unlockAll and true or old_does_own_gun(...)
end


local old_isPlanted; old_isPlanted=hookfunction(_isPlanted,function(...)
    return _settings.infjump and true or old_isPlanted(...)
end)

-- // IDK // --

uis.InputBegan:connect(function(key,gpe)
    if key.KeyCode == Enum.KeyCode.RightShift then -- toggle library
        library:Toggle()
    end
    if key.KeyCode == Enum.KeyCode.Space then
        if _settings.infjump then
            _plr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

--[[
BadgeService: BadgeService
GUIFX: table: 0x00000000e01d59ce [ ... ]
Loaded: true
ControllerService: Instance
Shake: table: 0x00000000d669b2be [ ... ]
Projectiles: table: 0x000000004b0f183e [ ... ]
Directory: table: 0x000000009fe8637e [ ... ]
GUIParticles: table: 0x00000000ffa64786 [ ... ]
AssetService: AssetService
Crates: table: 0x000000002c701dfe [ ... ]
HapticService: HapticService
Debris: __DEBRIS
Signal: table: 0x00000000c591d5ce [ ... ]
GunCmds: table: 0x00000000ca30b13e [ ... ]
GIF: table: 0x00000000e692c0e6 [ ... ]
CollectionService: CollectionService
GamePassService: GamePassService
China: table: 0x00000000de4133c6 [ ... ]
LocalPlayer: tommyleandoer
HttpService: HttpService
GUI: table: 0x00000000c7babeae [ ... ]
TweenService: TweenService
Gamepasses: table: 0x00000000f55ae086 [ ... ]
Game: Game
MagicText: table: 0x00000000e796af3e [ ... ]
VipCmds: table: 0x000000004b34d3de [ ... ]
GroupService: GroupService
PolicyService: PolicyService
Settings: table: 0x000000001971e7be [ ... ]
Entity: table: 0x0000000060d3f3e6 [ ... ]
GamepadService: GamepadService
TeleportService: Teleport Service
RenderStepped: function: 0x00000000f4cb58ae
Network: table: 0x00000000cce71ace [ ... ]
VRService: VRService
Audio: table: 0x00000000766e7e26 [ ... ]
Functions: table: 0x000000008b8fa2be [ ... ]
Controller: table: 0x000000006e0d4e46 [ ... ]
UserInputService: Instance
TouchInputService: TouchInputService
PathfindingService: Instance
TextService: TextService
Stepped: function: 0x000000005bce015e
Killstreaks: table: 0x00000000250b979e [ ... ]
SoundService: SoundService
RunService: Run Service
PointsService: PointsService
PhysicsService: PhysicsService
NotificationService: NotificationService
MessagingService: MessagingService
ProximityPromptService: ProximityPromptService
Assets: Assets
Services: table: 0x0000000042e96786 [ ... ]
GuiService: GuiService
Save: table: 0x000000009de5a226 [ ... ]
Print: function: 0x00000000ecef1b5e
WorldFX: table: 0x000000009a846ca6 [ ... ]
DataStoreService: DataStoreService
Things: __THINGS
MarketplaceService: MarketplaceService
Interact: table: 0x000000004c45df86 [ ... ]
Variables: table: 0x00000000c47401de [ ... ]
InfoOverlay: table: 0x00000000f3670926 [ ... ]
Language: table: 0x00000000ed90c066 [ ... ]
ChallengeCmds: table: 0x00000000d38200be [ ... ]
MouseService: Instance
LocalizationService: LocalizationService
Debug: table: 0x00000000fab7511e [ ... ]
Packs: table: 0x0000000072c9885e [ ... ]
LogService: LogService
KeyboardService: Instance
InsertService: InsertService
JointsService: JointsService
Message: table: 0x00000000250ff35e [ ... ]
Player: table: 0x000000001b0719ee [ ... ]
Shared: table: 0x000000000da6acde [ ... ]
ContextActionService: ContextActionService
ChatMsg: table: 0x00000000e9e3ca66 [ ... ]
Heartbeat: function: 0x000000006edf75a6
FriendService: FriendService
StarsCmds: table: 0x0000000019dae0de [ ... ]
]]